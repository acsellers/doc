// Code generated by go-bindata.
// sources:
// gen/assets/conn.tmpl
// gen/assets/lib.tmpl
// gen/assets/mapping.tmpl
// gen/assets/scope.tmpl
// gen/assets/scope_subs.tmpl
// gen/assets/scopes.tmpl
// gen/assets/starter.tmpl
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _genAssetsConnTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x94\xcf\x6e\xd4\x3c\x14\xc5\xd7\xf1\x53\xdc\x46\x5f\x3f\xc5\x25\x18\xb5\xcb\x4a\x23\x44\x5b\x58\x20\x54\xa0\x5d\x56\x5d\xb8\x1e\x27\xb2\xc8\xd8\xa9\xed\x69\xa9\x46\xf3\xee\xdc\x6b\x27\x99\x20\x46\x14\x10\xac\xe2\xbf\xe7\xfc\x7c\x1c\xdf\x5e\xaa\x2f\xb2\xd5\xb0\xd9\x80\xb8\x94\x2b\x0d\xdb\x2d\x63\x66\xd5\x3b\x1f\xa1\x62\x45\xb9\x94\x51\xde\xc9\xa0\x5f\x85\xfb\xae\xc4\x7e\xb3\x8a\xf4\x09\xd1\x1b\xdb\x06\x6a\x46\xb3\xd2\x25\xe3\x8c\xc5\xa7\x5e\xc3\xb9\xb3\x16\x70\x76\xad\x22\x6c\x58\x71\x84\xdb\xc4\xc5\x19\x2b\xde\xf4\x3d\x4e\x35\xa6\x65\x85\xd7\x8d\xf3\x2b\x19\xe1\xce\xb9\x8e\xba\x71\xed\x2d\xaa\x0d\xfd\x0f\xae\x85\xa3\xce\xb5\x02\x1b\xad\xf6\x0c\x79\x9a\xb5\x55\xf0\xb1\xd7\xb6\x5a\x7a\xf3\xa0\x3d\x81\xd6\x40\x68\xd7\x6e\xed\x95\x4e\xe0\x19\x89\x43\x75\x44\x0c\x35\x68\xef\x9d\xe7\x04\xa1\xe0\x74\x01\xff\xd3\xe8\x66\xcb\x0a\xd3\xc0\x4e\x05\x16\x0b\x28\x7b\x17\x62\xeb\x75\x28\x69\x71\xa1\xc4\x04\xb8\x00\x3c\x88\x1e\xc6\x46\xca\x71\x10\xa5\x1e\xa4\x27\x9b\x6c\x85\x3e\x78\xd2\xe4\x8b\x6b\xe8\xdc\xcf\x10\xf3\xc4\x42\xcb\x0f\x16\x60\x4d\x97\xdc\xb3\x0f\x75\x93\x52\xb2\x51\x62\x4a\x0f\x95\x2f\xf5\xe3\xd4\x9d\xa9\xf3\x31\x49\x50\x35\x6d\x9f\x72\xab\x14\xa4\x44\x38\x9c\x77\xce\xea\x8a\xe7\x6e\x0a\xe6\x64\x97\x0c\x7a\x5f\x9c\x9d\x42\x3a\x03\xb6\x27\x0b\x1a\x9a\x3a\x75\x22\xcc\xe9\xd0\xc4\xd8\xae\x27\x72\x4c\x28\x4f\x0c\x1d\x9a\xc1\x8b\xa4\x31\xfc\xd4\x74\x9e\x1d\xe8\xc9\x1e\xc8\xb7\x5f\xb5\xaa\xee\xd7\xda\x3f\x0d\x37\x5a\x83\xf4\x6d\x00\x21\x84\xb1\x51\xfb\x46\x2a\xbd\xd9\xe2\x35\x53\xc2\x57\x3a\xac\xbb\x38\xbf\x6b\x4c\x34\x39\xcd\x33\x4d\x03\xe2\x13\x8a\xc5\xa6\x2a\x0f\x03\x1c\x3e\x94\x35\x24\x8f\x2c\xce\x53\xcc\x23\x15\x26\x20\x12\x85\x12\xef\xd2\xe9\x3e\xd3\xca\xcc\xc4\xf3\x06\x84\xe1\x7b\xd8\x67\x0b\x9f\x81\x4f\xef\xe2\xca\x3d\x86\x7f\xc0\x9e\x29\xfe\x0c\x1e\x91\x7e\x85\x7f\xc4\xff\xdb\xd4\x64\xff\xdb\xe0\x3f\x2c\x9f\x4a\x41\xfe\x0e\x90\x07\xb3\x87\x3d\x7b\x69\x69\x47\xfe\x2d\x7b\xe9\x63\xa0\x17\x31\x54\x37\x71\xdd\x77\x26\x56\x03\x76\xf9\xba\xe4\xf9\xc9\x5b\xfd\x98\xdc\xe0\xe6\x36\xaf\x64\x05\xea\x82\xa9\x81\x14\x48\xc0\x4b\x8b\x35\x35\xe9\xdd\x9c\x76\x58\x05\x52\x93\xbf\x3c\xbe\x4d\xd6\x93\xc0\x02\x64\x8f\x45\x62\x59\x8d\x23\x35\x60\x81\x45\xdf\x29\xb9\xff\x0e\x97\x65\xd6\xad\xc1\xbc\x38\xe6\x39\xb8\x9f\x09\x64\xd7\xef\x4c\xf9\xee\xcd\x8d\x47\x7b\xef\x8c\x9d\x6d\x2a\xcb\x7d\xc9\x62\xc1\x08\x54\x30\xd2\x2f\x4a\xe4\xf3\x0b\x1b\x26\xd9\xf6\x5b\x00\x00\x00\xff\xff\x9d\x7c\x33\x90\x43\x06\x00\x00")

func genAssetsConnTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsConnTmpl,
		"gen/assets/conn.tmpl",
	)
}

func genAssetsConnTmpl() (*asset, error) {
	bytes, err := genAssetsConnTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/conn.tmpl", size: 1603, mode: os.FileMode(436), modTime: time.Unix(1448035636, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsLibTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x1c\x6b\x73\xdb\x36\xf2\xb3\xf3\x2b\x70\x9a\x49\x4a\xc6\x3a\x3a\x4d\x1f\x1f\x7c\x75\x33\x4e\xac\xa4\x6a\x15\xd9\xb5\x94\x74\xee\x3c\x9e\x0e\x4d\x41\x36\xcf\x14\xc9\x90\x94\x12\x9f\xab\xff\x7e\xbb\x0b\x80\x00\xf8\xb0\xe4\x57\x2e\xbd\xba\xd3\x89\x45\x60\xb1\xef\x5d\x3c\xb8\xe0\xe5\x25\x9b\xf0\x69\x18\x73\xd6\x89\xc2\x93\x0e\x5b\x2e\x1f\x6d\xa4\x7e\x70\xee\x9f\x72\x06\x7d\xde\xd0\x9f\x71\x6a\x7c\xb4\xb1\xb5\x75\x9a\x6c\x9f\xf2\x98\x67\x7e\xc1\xd9\x24\x63\x27\xf3\x30\x9a\x60\x4f\x38\x4b\x93\xac\x60\xce\xa3\x8d\x8d\xce\xc4\x2f\xfc\x13\x3f\xe7\x5b\xf9\x87\xa8\x83\x0d\xd3\x59\x41\x7f\xf3\x22\x0b\xe3\xd3\x9c\x7e\x17\xe1\x8c\xd3\x8f\xd3\xb0\x38\x9b\x9f\x78\x41\x32\xdb\xf2\x83\x9c\x47\x11\xcf\xf2\xad\x49\xb6\x95\x07\x67\x7c\xe6\x03\x88\x8b\xf8\x8b\x8b\x94\xb3\x51\x90\xc0\xbf\x61\x5c\xf0\x6c\xea\x07\xc0\x1d\x8c\x0f\x92\x78\x32\xfa\x75\xe0\xb8\xcc\x11\xe8\xbb\xec\xe8\xb8\x04\xb9\x5c\xc2\xe8\x8d\x5f\xe7\x3c\xbb\x58\x05\xf4\x2e\x05\xbe\xf9\x2a\xa8\x3d\x1e\xf1\xd5\x50\x39\x32\x8a\x7a\x03\x28\x01\x04\x8d\xaf\x92\x38\x86\xe7\xa7\xf8\x17\x1e\x47\xbc\xa0\x16\x7a\x76\x85\x6c\xd0\xfc\xef\x24\x8c\xf7\xe3\x12\x35\x35\x1b\xa4\x4e\x92\x24\x72\x25\x98\x7f\x12\x59\x04\x0a\x6c\xa8\x52\x45\xfd\xe4\xd0\x70\x74\x8c\xbf\xc2\x22\x4c\x90\x38\xf1\x1b\xfb\x11\xf2\xa3\x7e\x4b\x0e\x96\xa5\xba\xad\x0e\xc4\x38\x0f\x0a\xa5\xf3\x98\xb5\xfc\xa7\xc4\x23\x66\xba\x8c\xfe\xec\x46\xa1\x9f\x1b\x30\x06\x73\xd1\x7c\x16\xe7\x8d\x88\x8e\x8e\x4b\xb0\x24\x9b\xf0\xac\x85\x9e\x01\x86\x3a\x69\xc6\x55\x03\xe3\x13\x12\xaa\x06\x7d\x74\xac\xec\x10\xc6\x41\x34\x9f\xd4\x21\x2a\xc8\x4a\xa5\x36\x00\xda\x2a\x3f\xf3\x17\x30\x64\x25\x77\x00\xc6\xdf\xfb\x51\x0b\x5d\xc3\xcf\x00\xf6\x34\x4b\xe6\xe9\xcb\x8b\x55\x28\x83\x79\x96\xf1\x18\xbc\x0d\x95\xdd\x65\xf2\x51\x18\xa5\x04\x0a\xf3\xbd\x30\x2f\x40\xea\xa2\x8e\x0b\x9d\x0e\x40\xa2\x70\x16\x16\x5d\x96\x4c\xa7\x39\xaf\x42\xa1\x17\x7d\xff\x2d\x00\xcd\x29\x8c\x9a\xcd\x30\xf3\xd3\x23\x41\xd0\x16\x84\x5c\x6e\x3a\x8f\x03\xf0\x73\xf2\x35\xdb\x27\x5d\x66\x86\x0e\x79\x60\xc6\x8b\x79\x16\x33\x82\xf6\x02\xf2\xb8\x95\x48\x1a\x22\xa1\x11\x97\xb4\xa7\x8d\xb1\x86\xed\x03\xe6\x94\xf6\x24\x40\x98\xb7\xb6\xd8\xa8\x37\xe8\xbd\x1a\x33\x47\x7a\xba\xcb\x5e\x1f\xee\xbf\x65\x0e\x85\x05\x0c\x26\x97\x75\xd9\x6f\x3f\xf5\x0e\x7b\x08\xa4\x88\xbb\x62\xf4\x9b\xc3\xfd\x77\x07\xec\xe5\x3f\x99\x43\xa6\x06\x3a\x2e\xfb\x69\xf7\x7d\x7f\xf8\x86\x39\xc2\x9f\x14\xe4\xfe\xe1\x5e\xef\x90\x20\x29\x58\xa8\x87\x0d\xfa\x6f\xfb\x40\x9b\xec\xe6\xb2\xfd\xd7\xaf\x47\x3d\x78\x14\xf6\xa3\x34\xf5\x21\x62\xdb\x3b\xa5\xab\x90\x4f\x2d\xd0\xf7\xa8\xd1\x10\x87\x7a\xc2\x29\x8b\x38\x64\x26\xaf\x94\x65\x67\x87\x3d\x23\x41\x09\xd3\x0e\xf3\xd3\x94\xc7\x13\x07\x1e\xba\xac\x23\x24\xef\x74\x59\xee\x91\xb4\x9b\x1d\xef\x69\x07\xa9\x2e\x19\x8f\x72\xbe\xc6\x38\x31\x5b\x78\x3f\x83\x8e\x34\x55\x80\x80\xff\x5d\x42\x24\x44\x07\xbe\x72\x2f\x4f\xe6\x19\xcc\x08\xc0\x51\x1c\x46\xec\x92\x41\x7b\x3e\x3f\x21\x23\x11\x94\x00\x35\x48\x37\x50\x46\xd3\x68\x7e\xa5\x62\x97\x8d\xb0\xb9\x47\x96\xf3\x3c\x8f\x66\x27\x53\x37\xa5\x09\xd9\x8f\x4a\x3b\x01\x70\x1d\x2c\x50\xab\x06\x00\xcd\x21\x2d\x3a\x20\x7f\x00\x56\x02\x32\xaf\xb0\x49\x09\x82\x4f\x88\x4f\x10\x17\x5e\x2a\xf5\x20\x78\x50\xbe\x62\xb0\x00\xdd\x90\x76\x2b\x84\x18\x50\x52\x1e\xd6\x71\x15\xd4\x34\xc9\xd8\xef\x5d\xa6\x90\x20\xd7\x99\x1f\xc3\x5a\xc0\x40\xac\x71\xd6\xb1\xea\xa1\x9e\x9e\x77\x15\xf8\xb2\x54\xaa\xa9\x34\xe1\xca\x86\xc2\x1a\x54\x22\xdc\xbe\xd3\xa2\x31\x85\x43\xea\xa4\x51\x63\x04\x43\xb9\xd5\xd2\x5c\xc9\x05\x05\xce\xd5\x4c\xa8\x28\x6b\x67\x83\x90\x54\xf1\xe7\x1e\x85\x20\xfb\x9b\xf4\xce\x16\xec\x14\xae\x60\x75\x58\x2e\x79\xa3\x14\x9c\xbf\x98\x3a\x9d\xc7\x0b\x68\x79\x2a\x31\xb8\x15\xb4\x32\x15\xaf\xc0\x2b\x02\xbf\x0d\xb1\x4c\x07\x1a\xb3\xca\x87\x56\xf8\x11\x22\x88\xbb\x2e\x43\x65\xae\x99\x6d\xb5\x9f\x5f\x99\x26\x17\x7e\x46\x58\x6b\xf3\x1b\x65\xec\x5a\x86\x92\x0e\xaa\x93\xb8\xf6\xd0\x4a\x0a\x97\xd1\x47\x58\x4a\x9d\xd0\xa3\x31\xdc\x1b\x27\xc4\x62\x7b\xa4\x95\x90\x0b\xcb\x77\x1a\x15\x25\xb1\x77\xd8\xee\x70\xef\x3a\xea\xea\x7d\x40\x6a\xcc\xd2\x8d\x0d\x23\x56\x5e\x28\x6c\xc9\xd0\xa5\xc8\x89\xdb\x4a\x70\x73\x9e\x97\x19\x1b\x91\xee\x18\xee\x11\x90\x7a\x40\xc4\x4e\x7f\xc4\x86\xef\x06\x83\x4e\x25\x23\x6b\x80\x1d\xf6\xa2\x23\x5a\xa4\x56\xec\x29\x01\x1a\x97\xa5\xcf\xd4\x34\xaf\x5d\xb0\xd2\x03\xfa\x74\x2b\x93\xee\x1a\xea\x19\xf2\xff\x89\x7e\xf6\xc7\x2b\x74\xf4\xc3\x8f\x5f\x90\x92\xde\x14\x37\xd1\x91\x08\x91\x56\x3d\x75\x55\x08\x6d\x43\xfa\xee\xa0\xb8\x5d\x15\x28\xdb\xd5\x25\x29\x89\xdb\xfd\x8c\xf2\xf2\xfb\x17\x78\xe7\x4b\x92\x78\x70\xff\x16\xfe\xe1\xcb\x92\x77\x2d\x0b\xdf\x56\xe4\xcf\x6e\x63\x58\x02\xcd\xe6\x51\x11\x62\xfa\x99\x73\x66\x6e\x3a\xae\x52\xc7\x4b\x5e\x7c\xe4\xb0\x56\x89\x92\x8f\x3c\xeb\xb2\x39\x90\xcd\xee\xd5\x19\x5e\xf6\xc6\xbf\xf5\x7a\x43\xf6\x82\xa6\xb3\x2b\x95\x64\xf2\xf4\x19\x3d\xa4\x1f\xd3\x2c\xcd\x60\x5a\x5e\xa5\x08\xb9\xd0\x43\x70\x73\xeb\x02\xcd\x19\x9f\x46\x3c\x28\xbc\xf1\x45\xca\xf7\xa7\x04\x71\xf4\xec\xd8\xf5\x7e\x09\x81\x4f\x82\x55\x10\xa3\x28\x94\xe7\x4e\xc0\x29\xad\xe8\x55\xcf\x7b\xb4\xa4\x31\x98\x40\xe4\x9c\x30\xf3\xcf\xb9\x63\xa9\xab\xcb\xb2\x85\x37\x00\x6e\xc4\xb2\x83\xd6\x34\x21\xa2\x7b\xf6\x0f\xf8\xfb\x43\xd9\x0b\x4f\x9b\x9b\x92\x1e\x61\x3b\x0a\x8f\x01\x21\x74\xf7\xe3\x09\xff\xe4\x84\x2e\xfc\x90\x58\xc5\x6e\x82\x56\x26\x1b\x7a\xd2\x59\x90\xfd\x25\x07\x6a\x11\x56\xea\xc1\xbd\xa5\x83\xf4\x87\xcc\xe9\xb0\x4d\x7b\x0d\xb4\x08\x60\x01\xf4\x02\x77\x69\xd0\xd3\x79\xe1\xda\x6e\x43\x8b\xaa\xcf\xb7\x70\x48\x8a\x6b\xb8\xc8\xfd\x2a\x0b\x97\x13\x5f\xbc\xc2\x06\x21\x08\x0f\xdc\x49\x0e\xef\x3c\xa5\x0c\xfa\xbf\xf4\xae\xce\x24\x40\xf8\x33\x26\x90\xdf\xce\x78\xc6\x69\x37\xac\xec\xbd\xae\xb3\x34\x6a\x01\xa5\xc4\xcd\x92\x16\xcf\x30\xdf\x9d\x08\x73\xa5\x38\x1b\xc9\x1c\x1e\xc9\xa9\x62\x3c\xb6\x57\x32\x15\x67\xb4\x6d\x07\xa9\xa4\xd8\x0d\xf2\xc8\x7d\x15\x81\xea\x3d\x95\x1c\x49\xe2\x89\xae\x1d\xd1\xe6\xa9\x03\x6c\x7d\x08\xe7\xca\x7c\x8a\x67\x23\x23\x49\x39\x39\xa7\x73\x0f\x82\x91\x67\xdb\xc8\x99\xa4\x03\x09\x0e\x00\x44\x7e\xd3\x30\x35\xbd\x50\xa3\xbd\x7f\x15\x29\xb1\x33\xe8\xbd\x1e\xb3\x9f\xf7\x21\xac\x1e\xe7\x6c\x1f\xff\x15\xae\x25\x99\xf5\xf4\x39\xb9\x6c\x36\x79\xa3\x16\x99\x81\x35\xa1\xf2\x6c\xb8\x81\x09\xd5\xa7\xd8\xd7\x43\x99\x12\x12\xc6\x44\x17\x8e\xd1\x0d\x9a\x29\xc2\x78\xce\x29\x2f\x1b\xbb\x08\xa5\x70\x12\x8e\x50\x54\x36\xb2\x16\x33\x72\x0e\x68\xd4\x6e\x89\x61\x85\x86\x6f\xa6\xe3\x2b\xb5\xdc\xaa\xe7\x06\x4d\x97\xba\xbe\x95\xb6\x57\xea\x5b\x6b\x7c\x63\x43\x34\x2c\xed\x89\x11\x97\x5f\x3c\xcb\x92\xac\xb2\x8f\x5f\x2f\x63\x6c\x84\x71\xfc\x97\x0a\xb1\xfe\x70\xd8\x3b\x7c\x88\xb1\xfb\x8e\xb1\x2b\xd4\xfc\x7f\x10\x64\xd7\x9f\x98\x0d\x35\x97\x31\x46\xfc\xf2\xe6\x97\xa2\xe2\x54\xbf\x98\xd0\xeb\xea\x32\x1e\x30\x66\xbc\xd1\xaf\x83\x31\xe9\x4d\x8c\xf7\xa8\x4b\xbc\x28\x45\x69\x0a\x3a\x63\x1c\xd1\xfb\x66\x8f\x00\xf3\x23\x24\x7b\xac\x23\xf6\x6c\x66\x84\x6b\xee\xfd\xe4\xe7\x6f\xfd\xf8\x42\x98\x3c\xf5\x71\xad\xf3\xd6\x2f\x82\x33\x04\x3a\x9b\x79\x07\xd4\x22\x5e\x9c\xe3\xe1\x12\xfe\x7d\xf2\x04\x7b\x5e\x9d\x85\xd1\xa4\xec\xa8\xb3\x23\xa3\xdb\x44\x09\x03\x15\xdf\xe6\x0b\x5e\x18\xae\x84\xfd\xe3\x0f\xd6\x0c\x00\x04\xe9\x2d\x9f\x2b\x7d\x33\x3d\x0f\x6c\x0e\x0f\xb2\x70\xe6\x67\x17\xbf\xf0\x0b\xb1\x54\x93\x5b\x08\x69\xa9\x86\x5c\xf0\x38\xf7\x1e\xa3\x17\xd1\x5f\xe5\x9e\x4d\x9a\xb6\xb5\xe0\x36\x42\x4a\x9a\x36\x68\x97\x01\x97\xd6\xa0\xba\x6c\x2b\xb0\x69\x25\x77\x4b\x9d\x8b\x5e\x13\xaf\x0b\x0e\x9f\xc9\x8c\x41\x6b\x37\x04\x33\xad\x68\xdb\xca\x30\x62\xc5\xbc\xad\x56\x34\x30\x7e\xf9\x46\xbc\xb6\x96\xaf\xb4\x59\x8b\x4b\x68\x95\xde\x8b\x0d\x97\xad\x01\x4b\xe3\xf7\xa7\x0f\x01\xfb\x10\xb0\x0f\x01\xfb\x67\x08\x58\x98\x61\xf7\x63\xfe\x10\xaf\x0f\xf1\xfa\x10\xaf\x7f\x86\x78\x7d\xc9\xa3\x04\x36\xb1\xe3\xe4\x21\x64\x1f\x42\xf6\x21\x64\xbf\xac\x90\x95\x62\x77\xb0\x04\xc8\x8f\xf2\xa6\xdd\x77\xb5\xe0\x12\xa2\x99\xd7\x8a\x83\xcd\x72\xc9\x27\xeb\xee\xe3\x0f\xa2\x79\x70\x2e\x8e\x28\xb0\x0e\x48\xbf\x57\xa1\xd3\x01\x57\xbd\x9a\x13\x42\xeb\x2a\x54\x51\xcc\x54\x7f\x9b\x80\x55\x17\x7b\xfd\xd1\xb8\x3f\x7c\x35\x66\xf4\x26\xa5\x0e\xf3\xc8\x3e\x6d\x17\x35\xc6\x46\x15\x51\xc3\x10\x82\xcf\xbb\x6c\xb1\xd0\x67\x07\xb2\xc4\x13\x65\x4e\x3e\xe6\xc4\x70\xe5\x60\x81\x0a\xdc\x1c\x31\x4e\x16\x06\x81\x28\x08\x67\x96\x64\x49\x8d\xe9\x22\x26\x42\x25\x99\xd4\xf5\x96\x46\x89\xd3\x84\x4f\x79\xc6\x90\xaa\x07\x96\xc8\x45\xf8\x60\xe2\xa5\xa6\x21\xff\x54\x38\xd2\xf5\xb1\x76\xaa\xe0\xb3\x54\x17\xf2\x6e\x20\xf9\x1d\x01\x39\x0a\xfc\xd8\x79\x82\xfd\x2a\xfe\xaa\xbc\xb5\x33\x27\x32\x40\x53\x41\x94\xc2\x67\x1d\xeb\x88\x2e\xc0\xbb\xae\x4b\xf4\xe3\x42\xf8\x03\x55\x0e\xdf\xbf\x3b\x7c\x89\x0e\x41\xa2\xb7\xf9\x83\xec\xbc\x99\x3b\xa8\x72\xec\x9b\x7a\x43\x85\xb3\xfb\x76\x86\x71\x48\xa9\x1d\xbc\x01\xef\x85\x78\xf8\xf8\xd7\xf4\x88\x52\xfc\x36\xaf\x30\x00\x6e\xe6\x19\x25\x82\x5b\x78\x47\x03\x97\xf7\xe8\x21\xad\x97\x55\x6a\xe5\xfb\x6b\x20\x13\x27\xd9\x39\x6b\x7f\x49\xe3\xe7\xa2\x52\x5b\x93\x7d\x74\xbd\x37\xb7\xbe\x59\x06\x2e\x6d\xbe\xfa\xa5\x80\x6f\xd5\x94\x5f\xfb\xf0\x5e\x0e\x57\x0d\x16\x16\x79\xf5\xa4\x32\x5e\xb4\xd2\x48\xab\x78\xba\xec\x15\xf7\x50\xea\xa3\xa8\x5d\x8d\x33\x0b\xaa\x05\x84\xba\x95\x52\x19\x28\x9b\x69\x9c\xfc\x2d\x87\x5d\xd3\x82\xa9\x5c\x50\xcc\x83\xc2\x7e\x3b\x90\xf1\x7c\x1e\x15\x76\x41\x14\xe5\x10\x32\xeb\x84\xe7\x85\x28\xdf\x69\xa8\xda\x11\x43\x5d\xaf\x17\xf1\x19\xd9\x1b\x9d\xb6\x06\xfd\x2f\x9e\x25\x4e\x89\x87\xca\x85\xc4\x1b\x04\x0e\xc3\x10\xb0\xda\xa7\xf1\x2d\x62\x13\xd1\x90\x7f\x74\x70\x0c\x49\x3f\x8d\x8a\xcc\xe8\x4c\xb2\xcb\x05\xe5\x9a\x14\x1b\x9f\xa4\x91\x8f\xef\x1b\x2f\x8f\x8e\x9f\x4a\x00\x0c\x54\x6c\x11\x57\xf2\x6a\xa5\x43\x88\xd7\x1b\xce\x67\xaf\x43\x1e\x4d\xac\x0a\xa2\x29\x42\x51\xb7\xe8\x0b\x55\xa0\x4f\xbd\xb1\x7f\xea\xbd\xe1\x85\xd3\x11\xa9\xb0\xe3\x62\xe0\x77\x3a\xd6\x6b\x43\x9d\x25\x2b\x9e\x2f\xef\x65\x34\x60\x21\x02\xd6\xfb\xb8\x16\x54\xf6\xc2\x57\x22\x14\x8d\x76\xd1\xba\xb9\x3c\x6f\x5c\x51\xc7\xc6\x42\xba\x79\x25\x2d\x5e\xdc\x4d\xad\x25\xb7\x5a\x3b\x97\x89\x2c\x85\xbd\x0b\xa9\xd9\x60\x52\xb7\x75\xd9\x93\x8a\x31\x42\x2c\xc7\xda\x66\x61\x57\xee\x53\xb7\x19\xd9\x15\xab\xc7\x45\x61\xcc\x74\xa9\x73\x20\xce\x06\xf9\x0d\x67\x91\x7c\xf5\x2c\xa2\xa7\x8d\xa6\xe9\xa1\x6d\x82\xa8\x4e\x05\xa9\xd7\x87\x20\xc8\xc1\x89\xe5\x9d\x8a\x2b\x66\x04\x73\x0a\x48\xc1\xbb\x20\x58\xc3\xff\x70\x67\x11\x9b\xd5\x69\x84\x44\xc7\x95\x8e\x86\x5d\xa1\xde\xb2\x0b\xa6\xca\x58\x46\x0e\x8d\x21\x4d\x7a\x21\xf4\xb3\xe6\x10\x5a\x9a\xe1\x8d\x2f\xcd\x35\x2e\xd7\x9c\x74\xf4\x74\x43\xf7\x1b\x27\x99\xd8\x96\xec\x66\x99\x7f\x61\x5c\x98\x2b\xd3\x8f\x6f\x83\x60\xb5\xa1\xb8\x14\xe8\xe4\x65\x79\x14\xbe\x7b\x34\x5e\xed\xe7\xa1\xf1\x86\xd9\x2f\x2b\x0c\xa1\x19\xf7\xb5\xb6\xd6\x5a\xb6\x69\xe6\x16\x8d\xf8\xd4\x37\x1d\xac\x3b\x98\xb4\xd8\xb1\x2e\x22\x32\xe3\x6a\xe5\x42\xdc\x21\x3c\x6a\xbd\x69\x17\x68\xbc\x2e\x93\x77\x20\xe4\x70\xb5\xe4\x0a\x64\x2c\x22\xef\x2a\x19\x48\x26\x45\x09\xbc\xcd\x78\x09\xbe\x89\x57\x45\xe0\x5f\x05\xa4\xa9\x82\xa7\xe7\x34\x2d\x3a\x31\xe6\x69\x8b\x60\x70\xe6\x67\xb9\x51\x7f\x77\x72\x51\x80\x2b\xc4\x4f\x9f\xff\xfd\x6b\xb5\xaa\x81\xf0\xfa\x5d\xeb\x57\x0c\x50\x2a\x0e\xd9\x63\xf6\xdc\xa8\xeb\x14\xf8\x44\xbd\xe4\x57\x2f\xbe\xaa\x65\x22\xb3\xbb\xfb\x55\x83\x1d\x04\x6b\x0e\xc1\xb9\xa6\x3d\x64\x4a\x36\xad\x51\x26\x8b\x5a\x9a\xb6\x74\x9e\xb2\xa7\x72\x30\xf8\x92\x88\x2e\xdb\x42\x84\x2c\x99\x17\xe9\xbc\x30\x34\x61\x15\x8e\x62\x39\xa2\xce\x44\x6e\xb3\x6a\x24\x0a\x92\x54\xfc\x16\x92\xea\x81\xf0\xec\x85\x65\xd9\xa8\xb5\x36\x13\x03\x4c\x89\x67\xe1\x27\x3e\xa9\x5c\xbc\x86\x30\x1b\xce\xa3\x48\xbe\x84\x77\x5b\xe5\xd4\xd9\xa0\x5a\xc8\x6d\x86\x8d\x66\xdd\xc8\xbc\x65\xf4\x48\xc7\xa2\x59\xb5\xa1\x2a\xf7\xa0\xc8\xd4\xf4\xe2\x4d\x15\x39\xd7\x30\xa9\x96\xc4\x36\x8e\x69\x42\x91\xb7\xf5\x2c\xac\x63\xac\x2c\xfe\x25\x60\x9a\x3b\x31\x3e\x30\xe3\xa3\x40\xf0\xfb\x84\xa9\xab\x70\x1e\xea\xe4\xa5\xb8\x2f\x3b\xb5\x5b\x5f\x47\x89\x2f\x36\x65\xa1\xdd\xd1\x97\x7b\xb5\xdc\x6e\x1e\xe9\xab\xb9\x31\x3c\xca\x5b\xb8\x35\x51\x12\x4b\x0a\xca\x92\xd6\xea\xc6\x32\x4c\x36\x65\x15\xff\x84\xe5\xb5\xf0\x02\x56\x75\x43\x2c\x8c\x9e\xae\xab\xf9\xfc\x63\x88\x67\x7a\x95\x01\x22\x89\xab\x71\xa2\x44\xd2\xcf\xb9\xa9\x51\x10\x71\xdb\x4c\x8a\x4f\x00\x45\x5e\x03\x44\x8d\xd6\xc0\x4e\x6a\x60\xa4\xe2\x6f\x9e\x77\xed\x86\xef\xbf\xad\x0d\x9d\x62\x03\xcc\x8e\x3e\xac\xfa\x6a\x9d\x61\xe9\x39\x46\xbe\x90\xfd\xd0\x2d\x1c\x85\xe6\x23\x25\xa0\x58\x4f\xe1\x50\x74\x0a\xd7\xdb\x9d\x4c\x32\xa7\x5a\x9a\xbd\x5c\x69\x09\xed\xbb\x64\x6c\x91\x59\x1a\x15\x6b\x68\xb4\x4d\xa1\xc2\x7c\x39\x3a\x41\x38\x51\x13\xcf\x5a\xdc\xe3\x04\x5a\x5d\x20\x93\x59\x24\xfa\x86\x65\x5d\xc3\x8c\xd6\x6c\x3f\xc1\xd5\xc9\x1d\x72\x75\x42\xc8\x6f\xc0\x93\xe9\x1b\x82\xad\xe9\x1d\xb2\x35\x55\xf8\x6f\xca\xd9\x37\xcf\x5b\x39\xa3\x85\xfc\x54\x00\x39\x16\xad\x5b\x32\x3e\xbd\x01\xb3\x94\xbd\x0c\x56\xc3\x3b\x54\x62\x28\xb0\xdf\x8c\xab\x56\x9e\x68\x89\x06\xd9\xce\x31\x28\xdc\x96\xd9\x70\x3d\x1e\xcd\x94\x73\x2b\x75\xf5\xeb\xec\xaf\xa2\xdd\xb2\xc4\xa4\x74\xb4\x27\xf8\x42\xac\x90\x66\xca\xc5\xad\xf8\x06\x8b\x27\x0f\xd6\xac\xd3\x16\xa3\xe3\x12\x77\x52\xdb\xb8\xd3\xe9\x32\xcc\x4e\xdb\xac\x83\x73\xc9\x29\xcf\x3a\x5d\x36\xe0\xf1\x69\x71\xb6\xcd\xbe\x7e\xb6\x6c\x20\x28\xdf\x0b\xdc\x09\xcd\x85\x9f\xe1\x5a\xcd\xa0\xf9\xfc\xbb\xef\x9a\x88\x62\xbe\xb8\x1b\x92\x98\xa5\x3b\x4d\x24\xe8\x3c\xf3\x4e\x48\xe0\x51\x5b\x5e\xf8\xb3\xd4\xa6\x13\x64\xdc\x2f\xf8\x21\x0f\x92\x6c\x02\x4b\x79\xfa\x32\x06\x6d\x36\x73\xa6\xdf\xb0\xd4\x2f\x55\x77\x59\x2c\xdf\x4d\x19\x27\x27\x2e\x73\x00\xc4\x3a\x6f\x95\x5f\x86\xa8\xbe\x28\xeb\xf4\x87\xa3\xde\x21\xde\x62\x19\xef\x63\x95\xaa\xf3\x38\x77\xd9\xfb\xdd\xc1\xbb\xde\x88\x7e\x8b\x9d\x79\xd0\xb4\x1b\xaf\xdc\x92\x8e\xd4\x87\x1c\xa8\x53\x6f\x0b\x70\x75\x8b\xbd\x2e\x75\xb8\x6a\x1f\x22\x94\xa5\x76\x0a\xc4\xde\x26\xec\x49\xd8\x61\x6f\xfc\xee\x70\x88\xdf\xc3\x10\xfb\x8d\xea\x2e\x5f\xc8\x49\xe1\x81\x07\xa0\xe9\xb9\x5c\xb0\xe1\x46\x9b\xae\x6f\x88\x9d\xf5\x61\xf2\x51\x5c\x71\x37\x6e\x78\x6f\xc8\x5d\x38\x40\xca\xb3\xd1\xf4\xdc\x35\x56\x02\xe9\x79\x79\x40\x6b\x2d\x13\xf0\x20\xa9\xdc\xc2\x07\x5e\xef\x13\x0f\xea\xb8\xaf\xd8\x4b\x3f\xb3\x4f\x54\x09\x7a\x52\x22\x14\xf8\xbd\x81\x9f\x43\xb0\xe6\x3c\x2b\xfa\x13\xc7\xe4\x0a\xd3\x5a\x38\x71\x8d\xb3\x63\xed\x33\xe2\xd3\x2c\x77\xe5\x33\xfa\x64\xad\xcd\x59\xde\x1d\xec\xed\x8e\x7b\xe8\x27\xf8\xdd\x11\xf8\x23\x3e\x73\xf2\x38\xdf\x79\x71\x4d\x47\x81\x9d\x4b\x79\x3d\x8a\x95\xb7\x35\x5b\xcd\xad\x5c\xe7\xf7\x55\x76\x30\x8f\x2f\xb4\x9e\x26\xf4\x8d\xa7\xaa\x9e\x2a\xdb\x97\x1b\x6b\x65\xaf\x37\xe8\x81\x56\xe8\x3b\x30\x86\x4e\x2a\x62\x55\xb5\x72\x73\x59\xab\x72\xa2\xa4\x97\x97\x8c\xc7\x13\xfc\xa8\xd7\x23\xe3\xeb\x5f\xb0\x59\x9f\x86\xa7\x57\x7e\x00\xcc\xf8\xcc\x97\xf9\x39\x2f\x7a\x6c\xfc\x90\x57\x18\xd3\x44\x89\xb1\xad\x3e\xe5\xa5\x3f\xe7\x85\x12\x21\xc9\xea\xce\x52\x89\x5f\x26\x4f\xb5\x13\xd2\x3a\x50\xee\x5a\x05\xd1\xdb\x23\xe4\xfa\xad\x9f\x9a\x1f\x1d\xd2\x07\x3c\x04\xb1\x9b\xa6\x92\xbe\xb1\x81\x1a\xa5\x3c\x08\xfd\x48\x94\x81\x2b\x24\xba\xfd\x95\x3c\xb9\x34\xb0\x96\x30\x00\x35\x4c\xb2\x19\xf8\x49\x29\xd9\x86\xe9\x57\x43\xfe\xb1\x24\xe9\x4c\xb2\x70\xc1\xb3\xa1\xe9\x3b\x9a\x1f\x63\x7e\x28\x1b\x29\x49\x58\xdc\x6d\x2b\xf6\x2e\xe9\xbe\x5c\x85\xc5\xed\x06\x1e\x25\xa0\xe0\x72\x1b\x73\x4f\xb7\xb6\x31\x09\x34\x49\x97\x95\xa6\xa0\x1a\x88\x8a\xb6\xd5\x2e\x51\xf8\xa3\xb8\x26\x01\x7e\x6a\xb2\x78\x44\xe3\x8e\xf5\xfd\x08\x75\x12\xe7\xd3\xfb\xa7\xa5\xca\xef\x52\x6f\x3b\xf5\xc3\x4c\x42\xf0\xa8\x72\xce\x24\xc0\x3d\x9b\x3b\xf7\x4a\x31\xa4\xdf\xc8\xcf\x92\x59\xa7\x67\xb5\x63\x2f\x4a\x3a\x15\x79\xa4\x56\x6b\x02\x55\xe5\x87\xb1\x47\x02\xbb\x01\x54\x11\xbb\x5c\x8e\xad\x90\x3d\x30\xab\x19\x1a\x84\x6f\x92\xc9\x3a\xa9\x1a\xe0\xa5\x6c\xcb\xc7\x2f\x0d\x15\x19\xbd\xeb\x58\xba\xf2\xb9\x93\x71\x42\xe3\x9b\x74\x5f\x45\xbc\xae\xee\x5b\x28\x34\x08\x76\x00\x0b\xf0\xf0\x53\x3d\x7a\x49\x04\xd1\x69\x7e\x78\x0f\xc7\x57\x5a\xcd\xd3\xaa\xc0\xc2\x77\x0d\x5d\xa4\x81\x67\x52\xdc\x54\xde\xba\x02\xf9\x35\xf5\x01\x54\x2c\x11\x36\x4b\xc7\xd0\x0a\x39\xf4\xc3\x28\xaf\xe8\xc3\xe0\xc2\xe8\xbe\x85\xa9\x8d\x64\xee\x1d\x44\xf3\x4c\x1c\x56\x98\xad\xef\x60\x83\x92\xe5\x30\x71\xaa\x98\x74\x6d\xcf\xa8\xf2\x71\x4b\xcf\x68\x21\x2d\x1d\xc6\xb5\xa7\xba\xff\x06\x00\x00\xff\xff\xe6\x73\x94\x73\xe8\x52\x00\x00")

func genAssetsLibTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsLibTmpl,
		"gen/assets/lib.tmpl",
	)
}

func genAssetsLibTmpl() (*asset, error) {
	bytes, err := genAssetsLibTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/lib.tmpl", size: 21224, mode: os.FileMode(436), modTime: time.Unix(1448045222, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsMappingTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\xdf\x8b\xdc\x36\x10\x7e\xf6\xfe\x15\x13\x93\x06\xfb\xba\xf8\xca\x5d\xe9\x43\xcb\x16\x42\x9a\x96\x42\x13\x5a\xee\xe8\x4b\x29\xc1\xf6\xca\x17\x51\xff\xb8\x48\xb2\x21\x59\xf6\x7f\xaf\x46\x92\x6d\xf9\xc7\xee\xda\xbe\xcd\xb6\xe4\x65\xb1\x2d\x69\xf4\xcd\x37\xa3\x99\x4f\xbb\xdb\xc1\x96\x24\x34\x27\xe0\xd2\x5c\xbc\xcb\xc2\xc7\x47\xc2\x5c\xd8\xef\x57\x0e\x4d\xa0\x82\xcd\x06\x72\x9a\xc2\x6e\xe5\x38\xd7\xd7\xb0\x2d\x20\x2f\xc4\x7b\x9a\x3f\xac\xa1\xe4\x04\x3e\x11\x56\x40\x15\xa6\x25\x59\x39\x7b\x20\xa9\xfc\x24\x57\xf1\x35\x14\xff\xc0\xf7\x1b\xa8\x02\x4f\x1a\xfd\xee\x5b\xff\x07\xfc\x80\x36\xe4\x76\x72\x42\xf0\xa6\xe4\xe2\x6d\x99\xa6\x6a\x1f\xc7\xa9\x42\x06\x82\x64\x8f\x20\x67\xe3\xbb\x7a\xde\xe0\x9b\xc7\x7d\xfc\xe0\x5d\x65\xc1\x1b\x05\x2d\x78\x55\x32\x46\x72\xe1\x07\xd2\x54\xf0\x36\xcc\x88\xb4\x21\xe7\xbe\xc0\x35\x7a\x03\x05\x43\x1b\x3e\xbd\xae\xd9\x03\x17\xe6\x5b\xb5\xae\xf5\x24\xb2\x3c\xf9\xeb\xef\xe8\xa3\x20\xad\x2b\x74\x0d\x84\x31\x1c\xe4\x82\xc5\x45\x5e\x05\x2f\x45\x41\x3d\xf9\x22\xe9\xf1\x22\xdf\x3f\xe8\xee\x04\x6f\xe8\x12\x57\xba\x5e\x38\x8c\x88\x92\xe5\x08\x52\xba\xb4\xaa\x5f\x65\x34\x57\xed\x2c\x2b\xfc\x1a\xf8\xf9\x33\x40\xdb\x3d\x95\x02\x13\x38\xe1\x0b\x38\xe1\x87\x22\xcb\x8f\x44\x76\x39\x42\x1d\xfb\x26\x9f\x66\x21\xed\xad\xad\x11\xaf\x4e\x47\x4e\xd0\x8c\x9c\x3f\x6e\x68\x35\xb8\x97\x3f\xff\x93\xd0\x4d\x20\x22\x2a\x8a\xf4\x14\x11\x54\x00\xe5\x90\x84\x08\xa5\x60\x90\x4b\x3f\xd6\x20\xde\xdb\x8c\xf0\x43\x25\x00\xed\x9f\x81\x8d\x68\x01\x1b\xd1\xa1\x44\xa6\x8b\x8a\x6d\x04\xe8\x0b\xbe\xa2\x09\xa4\xe8\x1b\xb5\x64\x5a\xa9\x45\x30\x35\x04\xbd\x4a\x1a\xdc\x80\x60\x98\x4d\xb3\x6c\x0c\x98\x50\x70\x9e\xcd\x81\x53\xef\xba\x9f\x9f\x2f\x49\x5a\x84\x92\xb1\x73\xa7\x4c\x62\x85\xc4\x6c\x71\x86\xac\x49\x16\x64\x4d\xb2\x20\x6b\x44\x82\xdf\x0d\x6e\x8f\x3e\xa9\x8d\x89\x25\xa0\xc5\x24\xd4\xfd\xa2\x9d\x0c\xda\xf1\xef\x21\xe3\xe4\x67\xf4\xa3\x6e\xca\xd4\x5f\x83\x74\x75\xa5\xd2\x0c\x67\x3f\x6b\xe3\xdc\x69\x97\x75\x32\xfd\x77\x91\x72\x9a\xc3\x65\x70\x25\x99\x08\x5e\x33\x56\xb0\xc4\x73\xff\xc4\x94\xc3\x7a\x0e\x8c\xc4\xc5\x43\x4e\x3f\x91\x2d\x84\xbc\x0e\xda\x1a\x3f\x13\x5a\xc9\x8f\x5f\x55\xee\x1a\x2a\xff\xc8\x71\x18\x9c\x87\xdb\x9b\x8b\x9e\x87\xac\x4d\xb7\xdb\x1b\x2f\x79\x52\xba\x65\x4b\x98\xcf\x9e\x78\x48\x24\xea\x2f\xee\x90\xdc\xde\x4c\x3d\x24\xfc\x8c\xe1\xe3\x4b\x88\xe0\xe7\x3b\x39\xb7\x37\x8b\x4f\x0e\xd2\x7c\x7e\x09\x76\x3e\x61\xfa\x19\xf5\x97\x4d\x43\x5c\xa4\x65\x96\x1b\x22\xb8\x66\x42\x0e\xb3\x30\x7f\x20\xf0\x5c\x8f\xa2\x6f\xc1\x2b\xf5\xc8\x35\x18\xed\x96\x19\x0e\xee\x68\xf6\x98\x92\xfb\x8f\x8f\x35\xd4\xa4\xcc\x63\xf0\x78\x5c\xc8\x2f\x57\x72\xee\xf3\x1a\xe4\x1d\x7e\xf2\x01\x3f\x99\xb5\x66\xc0\x23\x1f\x20\x08\x02\x79\x66\x09\x4b\xc2\x98\xec\xf6\xfe\xc8\x4a\xa3\x30\x94\xe1\x20\xd6\x24\x68\x5c\xb0\x51\x23\x66\x48\x84\x51\x4a\x70\xa1\xe7\xc3\xd7\x7a\xc0\x71\x03\xb7\x79\x36\x06\x8a\x5c\x62\xff\xe3\x37\x6d\x41\xc3\x0d\xd4\xaf\x5e\xba\x06\x77\x08\xd4\xf5\x87\x10\x5e\xa6\x54\x26\xe4\x06\x5c\xd7\x1a\xa3\xfc\x27\xca\x05\xcd\x63\x81\xbd\x02\x2b\xaf\x1a\x94\xb4\xa5\x24\x97\xee\xfa\xf0\x63\x23\x99\x9c\x44\x16\xe5\x77\xf2\xa4\x57\x48\xb5\xe6\x5e\x12\xb2\xeb\xc0\x7d\xfd\xc1\x23\x95\xde\x5d\x9d\xe3\xfa\xd7\x84\x58\x4d\x32\xaa\x4a\xdd\xc8\x31\x1c\x3a\xac\x36\x8f\xf7\xc5\xd0\x27\x2c\x2d\xa5\xc4\xa9\xf7\xd3\x39\x06\x57\xc3\xb5\x96\x75\x9d\x00\x12\x63\x6d\xea\x97\x42\xc5\x1f\xff\x92\x70\xcd\x54\x93\x06\xd9\x44\x14\x3e\xdc\xc5\x61\xee\x55\xd0\x49\x02\x82\x65\xa0\x66\x42\x2e\xc2\x3f\x0d\xd2\x50\xf4\xfe\xfc\xa8\x13\x75\x6f\x11\x53\x9f\x9e\x71\x9c\xba\x74\x5e\x08\x6a\xef\xa2\x3e\x1f\xed\x8b\x1d\xde\xed\x00\xef\x76\xfb\x0b\x61\xee\x5c\x51\xe7\x23\xc6\xcb\xca\x85\x90\x76\xee\x90\xf3\x91\x1a\x7d\x73\x21\xb0\xfd\x0b\xcc\x42\xbc\xb7\x37\x97\xc4\x6b\x09\xcc\xf9\x78\x75\x4b\xbc\x54\x2e\xd8\x5d\xfd\x10\xd6\xfa\xef\xb6\xde\xb3\xdd\xd1\xca\x08\xd5\x06\x33\x83\xce\xf5\x95\xbe\x33\xa3\x43\xaa\xd0\xda\xb8\x2d\xd4\xcd\xba\xf1\xd2\xaa\x2b\x39\x0c\xfa\x9a\x55\xcd\xd5\x16\x53\xad\xeb\xa6\xd8\x50\x53\xef\xf2\x6b\x1e\xa7\xe5\x16\x9b\xdf\xf8\x4e\x56\x83\xe7\x65\xd4\xf6\x78\x6b\x9f\xd8\xee\xf6\x66\x49\x3b\xb9\xe9\xda\xc7\x76\x68\xa8\x6d\x9a\x46\x47\x17\x0c\x68\xec\xc8\x82\x81\xab\xbd\xad\x4e\xb3\x62\xb8\xb0\xbb\xe3\x54\x03\x3b\x35\x7b\x06\xf4\x63\xc6\x7c\x38\x12\x8e\x4e\x5e\x04\x46\x38\xe8\xe9\x28\x28\x30\x8f\xf3\xad\x37\x36\xda\x15\x27\x83\x5d\x8d\x4c\xe9\xb8\x1f\xf0\x6e\xae\xad\xe6\xa7\x82\x51\x2b\xcb\xb9\x98\x9c\x46\x3d\xf1\x33\x2a\xf9\xc0\xe0\xe9\x4d\x32\xb2\xee\x1e\x45\xa0\xe7\xda\x96\xdd\x56\x0e\x76\x05\xe1\xb8\x05\x23\x0c\xbb\x26\x0c\xf1\x03\x27\x6a\xc6\xc7\x00\xf7\x04\x62\x2f\xde\xe3\x42\xf1\x60\xec\x9a\x94\x3c\x2e\xf1\x06\x00\x7b\xa5\xe8\x84\xce\xb3\xb6\x69\xb5\x5e\x6b\x73\x4c\xee\x9d\xae\xed\x03\x4c\x13\xca\xfb\x31\xd5\xd7\xa6\x6c\x03\x61\xdf\xd6\x1f\xab\x25\x0d\x81\xf7\xf4\xdf\x45\xb0\xf7\x65\xe0\x13\xe0\x8f\x0a\xc2\x8b\x38\xd1\xd5\x85\x93\x5d\x38\x2e\x0a\x3e\x83\x2c\x98\x21\x0c\x3a\x98\xdb\xae\xd5\x79\xbb\xba\xee\x0a\x86\xee\x6d\x5a\x3f\xfe\x1b\x00\x00\xff\xff\xdf\x53\x1d\x4e\x9a\x1d\x00\x00")

func genAssetsMappingTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsMappingTmpl,
		"gen/assets/mapping.tmpl",
	)
}

func genAssetsMappingTmpl() (*asset, error) {
	bytes, err := genAssetsMappingTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/mapping.tmpl", size: 7578, mode: os.FileMode(436), modTime: time.Unix(1448041598, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsScopeTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4d\x8f\x9b\x30\x10\x3d\xc3\xaf\x98\xe5\xb0\x82\xdd\x88\xbd\x57\xe2\x90\xa6\x87\x4a\xad\x56\xad\xd2\x5b\x55\x45\x5e\x30\xc8\x15\xd8\xa9\x6d\xda\x46\x11\xff\xbd\xf6\x18\x92\x10\x4c\x92\x5b\x7a\xc9\x62\xbf\x37\x1f\x6f\xfc\xec\xd5\xbb\x2d\x85\xfd\x1e\xd2\x57\xd2\x50\xe8\xba\x75\x2e\xcc\x86\xd2\xb2\xcd\x35\xec\xc3\xe0\x89\x71\x4d\x25\x27\x35\x02\x61\x17\x86\x65\xcb\x73\x78\xa5\x7f\xce\x83\xe2\x1c\x9e\x56\x82\xf3\x04\x9e\x26\xf9\xf6\x21\x80\x82\x77\x19\x3c\x9e\x43\xfb\xce\x42\xe9\x9a\x6a\x1b\x1b\xe7\x89\x59\x4a\xaa\x5b\xc9\x41\x1d\xaa\xc5\x0a\xb3\x4c\xf2\x26\x70\x88\x33\x3f\x43\xf9\xa1\x64\x80\x51\x29\x42\x19\xd8\x3f\xc3\x96\x26\x6f\x35\xb5\x7b\xe9\xfa\xeb\xe7\x6f\x76\x11\x47\x27\xb9\xa3\x64\x71\x08\x6e\xa5\xa4\xdc\xd4\xa8\xdb\x86\x5f\x8a\x80\x67\x88\xd2\xc8\xfc\x22\xc3\xf1\xc7\x94\x05\xe0\xf2\x8b\x64\x0d\x91\xbb\x4f\x74\xe7\x48\xa3\xa2\x83\xf2\xd1\xac\xe3\xa9\x6c\x24\xd8\xad\x38\xb1\x67\xc5\x78\x65\xf5\xf6\xd1\xa3\xaa\x37\xcc\x10\xa7\x31\x49\xc6\x4a\x38\x19\xd6\xb2\x66\x44\xc1\x43\x06\x51\x64\xc1\x51\xa3\x27\x8c\x30\xe8\xc6\x22\x70\xfa\x73\x33\xbb\xa1\xb7\x55\x4d\x89\x8c\xfd\x96\x3a\xb6\x88\x45\x4e\x18\x90\x65\x0e\xc1\x5e\xdd\x17\x7a\x0f\x09\x83\xf3\x5c\xec\xc8\xdf\xe9\xaa\x16\xdc\xcc\xa1\xb3\x42\xc2\xa0\x12\xa2\x40\xdb\x7e\xff\x61\x4a\x14\x4c\x33\xc1\x8d\x61\x83\x52\x48\xd8\x2c\xac\xa5\x0a\x8b\x4a\xc2\x2b\x7a\x6c\xc5\xf1\x14\xd6\x36\x2d\x3e\xb8\x99\xaa\xf4\x23\x51\xeb\xb6\x2c\xd9\x5f\xeb\xd6\xc2\x30\xed\xf1\x2f\xac\x6d\x9e\x3d\x66\x4b\x30\xbe\x6f\x21\x03\xb2\xdd\x52\x5e\xc4\xb8\x74\x95\x13\x03\x63\x9f\xc1\xa4\x72\x06\xc8\x9b\xf3\xd3\xe5\x69\x2f\xeb\xfa\x6e\x03\xf7\x28\x39\x1b\xfd\x25\x45\x3e\x41\x98\xdd\xaf\xa6\x4f\xf5\x78\xeb\x74\xde\x13\x75\x2d\x97\xef\x59\x3c\x4e\x0c\x0d\xff\xf2\x02\x4b\x05\x8a\x6a\x05\x04\x9c\x07\x80\xe0\xdd\xb9\x52\x7e\xa9\x62\xe4\xf5\x77\xf4\xce\x47\xe4\xac\xea\x9e\x85\xac\x17\x30\x39\x1c\xab\xd5\xb5\xec\xe4\xba\x77\xf7\x36\xb5\x96\xf4\x1f\x09\x3e\x79\x05\x67\xe5\x5e\x91\xf4\x81\x29\xcd\x78\xae\xef\x7c\xbb\x98\x1a\x1a\x31\x49\xcc\xff\x79\x3a\x15\x62\x6a\x6b\xda\x6c\x6b\xa2\x29\x44\xc7\xdb\x18\x41\x6a\xba\x19\xa3\x42\x16\xd4\x9e\x8e\x0f\xfb\x29\x18\x9f\x81\x48\x55\x49\x5a\x99\x4f\x6f\xd2\x92\x71\x93\xd5\x0b\xe5\xa2\xe5\x7a\x26\xa9\x22\xbf\xe9\xa6\xdd\x16\x66\xe1\x85\xad\xbc\x8d\xfa\x55\xcf\x83\xb9\x68\xde\x18\xbf\x10\xdd\xd8\x77\x58\xfa\x1b\xb3\x57\xb9\x27\xf4\xad\xff\x0b\x00\x00\xff\xff\xf3\xed\xe6\x01\x5d\x09\x00\x00")

func genAssetsScopeTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsScopeTmpl,
		"gen/assets/scope.tmpl",
	)
}

func genAssetsScopeTmpl() (*asset, error) {
	bytes, err := genAssetsScopeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/scope.tmpl", size: 2397, mode: os.FileMode(436), modTime: time.Unix(1448046959, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsScope_subsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\xff\x6f\xe3\xb6\x15\xff\xb9\xfe\x2b\x38\xa1\xed\xa4\x8b\xa1\x76\xc0\xb0\x1f\x6e\xc8\x86\x5c\xe2\x5b\xb3\x65\xc9\x35\xce\xad\x18\xd2\x20\x50\x24\x3a\x51\x23\x4b\x8e\x28\x39\x17\xb8\xfe\xdf\xf7\x1e\x1f\x45\x91\xb2\x64\xc9\xf6\xad\xc0\xd5\x12\xf9\xf8\xf8\xbe\x7e\xde\x23\x95\xd5\x8a\x45\x7c\x16\xa7\x9c\x39\x61\x96\x46\x71\x11\x67\xa9\x70\xd8\x7a\x3d\x62\xec\x87\x1f\xd8\x43\x20\xe2\x90\xd5\x33\x30\x3a\x2b\xd3\x90\xb9\x22\xcc\x16\x9c\xbd\x83\xe5\xfe\x65\x30\xe7\xb0\x60\x8a\x23\x1e\x9b\xbc\xb8\xcb\x20\x61\x71\x5a\xf0\x7c\x16\x84\x7c\xb5\xf6\x36\xc9\xd8\x0a\x18\x31\x26\x99\xf8\x92\x34\x0d\x12\x39\xe3\xd3\x7a\x4f\xce\xe7\xbc\x28\xf3\x94\xc8\x60\x60\x3d\xea\xdf\xfe\x92\x1f\xb8\xbf\x62\xb0\xb7\x00\xff\x28\x0e\xdb\x9f\xd6\x1f\xb0\x3d\x3f\x74\x7f\x7e\x90\x00\x17\x07\xea\x7f\x71\x98\xfe\x17\x87\xea\x7f\xb1\x5d\x7f\x4a\x8b\x79\x99\x14\x31\x03\xb2\x92\xef\x94\x1c\x1f\x78\xf1\xca\x79\xea\x26\xd9\x2b\xcf\xc7\xac\x5c\x2c\x78\xbe\xbf\xa8\x6d\xdc\xf6\x36\xdc\x79\x8a\x6a\x0b\xe6\xfb\xfe\xde\x02\x29\x1e\xc0\x62\xff\xfc\xcd\x8a\xaf\x21\x49\xcd\xe6\x10\x61\x2e\xe2\x67\xee\x8a\x22\x67\xf0\x2f\x4e\x1f\x77\x0c\x24\xb5\x78\xef\xdd\x7f\x79\xe2\x39\x70\x78\x49\xd4\xf6\x63\x76\xb0\x59\x34\x4b\xe2\xd5\x6d\x1b\xe0\xc9\xd3\x08\xcb\xc0\xc8\xa8\x10\x59\x1e\x71\x94\xa4\xae\x0f\xd5\xc8\x4e\x59\x70\x85\x8b\x5c\xbd\x74\x98\x71\x25\x39\x3b\x66\x01\x44\x79\x1a\xb9\xc6\xe0\x58\x4b\xb1\xb7\xa9\xcf\xb8\x08\xdd\x43\x24\xa0\x97\xb0\xcc\x73\x9e\x16\xa7\x59\x52\xce\xd3\x23\x87\x9d\x4d\xa6\xa7\xce\xde\x42\x9d\xfc\x5f\x64\x3a\xe9\x16\xa9\xdd\xe9\xbf\x65\x71\x6a\xf9\xfc\x9f\x30\x20\x65\xef\x77\xf5\x37\x57\x25\x84\x1f\x2e\x70\x8b\x27\x60\x22\xa3\x57\xa9\xb7\x4b\xdc\x66\x9a\x8d\x63\xac\x72\xc6\x8c\xb8\x1e\x90\xe3\xdf\x9c\xa7\xe9\xd7\x90\x30\xd6\x6c\x76\x97\x50\xd9\xf4\xc3\x1b\x0b\x12\xc0\x72\xc1\xde\xb2\x92\x15\x19\x13\x0b\x1e\xc6\xb3\x37\x60\xc1\x19\xff\x12\x84\x05\x43\x5f\xb0\xe9\xcf\x17\x90\x33\x41\x31\x07\xb7\xb2\x59\x96\xb3\x0c\xdc\x04\x3f\xf3\x2c\xe7\xc4\xad\x08\x1e\x12\x2e\x7c\xf6\x5f\xe0\x13\x06\x29\xb0\x15\x19\x5b\x04\x42\x48\x56\xa4\x4a\xf6\xf0\x1b\x0f\x0b\x1c\x09\x0a\xb9\x61\x90\x73\x36\x0f\xd2\x12\x64\x78\x63\xca\xe9\x63\x46\x0c\x5f\x9f\xe2\xf0\x49\x52\xe4\x3c\xc4\xf0\x8a\xe4\xc6\xb3\x12\x94\xe1\x52\x78\x4c\x64\x10\xf9\x35\xcb\x9f\x59\x36\x9b\xc1\x3f\x14\x09\x46\x1e\x38\x94\x96\x30\x29\x23\xfe\xc7\xc8\xef\x77\x07\x19\xc2\xc5\xfd\x85\xc6\x3d\x7c\xe3\x91\xa4\x18\xee\x1f\x62\xd1\x48\x0d\x39\x48\x0c\x85\xd7\x20\xd6\x3b\xb4\xac\xa9\xe6\x6c\x59\x0e\xa9\x2d\xc8\x07\xdd\x04\x29\x4e\x6a\x2a\xe1\xe3\x99\x12\x49\x3a\xf1\x24\x89\x03\xc1\xfe\x70\xcc\x1c\x47\xcd\xeb\xcd\x66\xf3\xc2\x9f\x2e\x60\x65\x31\x73\xd5\x0c\x63\xce\x77\x02\x32\x9c\x7d\x27\x9c\xb1\x1e\x53\x38\x90\xa5\xa9\x0f\xa1\x73\x23\x37\xb5\x82\xd4\x6b\xd2\xd6\x5b\x57\x33\xa4\xe6\x7a\x43\xd9\xad\x6c\xb7\x80\x4a\xf0\xf8\x98\xf3\xc7\xa0\xe0\xc6\x59\xa3\x1a\x83\x22\xc2\x66\x71\x52\x48\x48\xef\x37\xe4\x4f\xc1\x12\xe8\x0e\xad\x93\x4f\x92\x4b\xd3\xf5\x34\x0a\x50\xfa\x92\x78\x36\x31\xff\x0f\xee\xb1\x49\x2e\xc7\xfb\xaa\xeb\x80\x36\x3e\xcf\xca\xc5\x87\x37\x30\xac\x1b\x66\xa4\xcc\xb0\x32\xf9\x48\x0b\x9b\x92\xa9\xe1\x31\x43\x6e\xbb\x96\xfd\x24\x9e\x43\x69\x37\x4b\xc0\x35\x17\xd0\x01\x03\xb3\x12\x21\x68\xb8\xaf\x2e\x90\x93\x2b\xf9\x61\xdb\xfb\x97\x3f\xf7\xa9\x43\xa4\xc7\xec\x7b\xf9\xb0\xaf\x35\xaf\x66\x33\xc1\x0b\x37\x93\x3f\xc3\x36\x56\xb4\xb0\x33\x3d\xed\x62\x2f\xf8\x3f\x14\x60\x23\xb2\xc1\x75\x25\xa0\xb7\xa0\x18\x0b\x60\x45\x92\x05\xd1\x20\x8b\x7d\x04\x5e\x6e\x1c\xd9\x87\x04\xd7\xa0\x1b\x33\x9e\xe7\x59\xee\x29\xe9\xad\xe4\x3c\xd1\xfe\xff\x10\x08\x40\x1a\x3c\x5c\xc7\x91\xe7\xf9\xd7\x1c\x82\x89\x2f\x61\x68\xa0\x05\xeb\x05\xdb\x36\xc7\x83\xd7\x7b\x30\x99\x41\xb1\x22\xcc\x98\xe3\xf8\x1c\x43\x32\xff\x98\xe5\xc6\x3c\x6d\x49\xe1\x38\xf7\x4f\xa9\x59\x41\xb3\x03\xaf\x91\x89\x5e\xd8\xbe\x60\xc2\x01\x11\x3d\x8f\x68\x1a\x93\x6d\x89\xdc\x89\xf0\xe7\x92\xe7\x32\x6d\x54\x84\x67\xaf\xf5\x9c\xc4\x2a\x49\x70\x9d\xbd\xba\xb4\x52\xe7\x02\x28\x82\x94\xb0\x00\xca\x4b\x90\xba\x73\xf9\x03\x45\xbd\x4e\x17\x80\x66\xa4\x02\x34\x4e\xe3\x44\xc3\x31\x0e\x1d\x4b\x34\x9e\xa0\x2d\x66\xae\x03\xdb\xbf\x07\x08\xfe\x35\x45\x18\x96\x12\x02\x0d\xcd\xba\x9e\x89\xa4\xa0\xa3\x1f\x06\xe1\x13\x8f\xee\x51\x36\x66\x0a\x6a\x7a\xf3\x1d\x10\x4a\x26\xa3\x1d\xdd\x75\x92\x24\xe8\xb1\xdb\xbb\x6e\x9f\x0d\xf2\xcc\xc1\x4e\x20\x1b\xb4\xb9\xa2\xe9\x87\xaf\x68\x64\x6d\x3f\x4b\xff\x15\x59\xc0\x70\x03\xe4\x2d\x34\xd1\x28\xa5\x7f\x9a\x64\x98\x28\xa3\xca\x3d\x02\x45\x6e\x2c\xa7\x49\xec\x7f\xe4\x92\x4b\xfe\xa5\x70\x3d\x2d\x69\xc1\xe7\x8b\x8e\x24\x68\x44\x38\x52\x5a\xea\x49\x76\x5d\xc1\xd7\x65\x99\x7e\x25\x2b\x35\x49\xb6\xed\x01\xa7\x94\xd6\xd5\x63\x29\xab\xd9\x3b\x5c\x58\x05\xae\x19\x98\x34\x0d\xe2\x18\xad\xac\x28\x1f\x10\x39\x17\x49\x19\x3e\x0f\x82\xb8\x4f\x71\xf8\x6c\x94\xef\xde\xbe\x5b\x9c\xc5\x02\xca\x51\x88\x46\x9c\x81\x00\xdc\x0c\x51\xf3\xb4\x83\xea\xbd\x24\xa3\x7d\xab\xc6\x27\xd4\x60\x2a\xa1\xdb\xcd\xa9\xe0\x59\x28\x2c\xd3\xa8\x0d\x76\xed\x93\xc1\xc2\x60\xd3\x38\x1b\x10\xd7\x6d\x7d\x92\xac\xb0\x56\xe9\x8d\x62\x68\xc1\x0b\xa9\x58\xaf\x06\xa7\xb8\x1a\x62\x53\x56\xbc\x36\x49\x71\xc9\xa7\x3c\x9e\x07\xf9\xdb\xbf\xf8\x1b\x59\x4d\xe7\xbf\xe7\x57\x86\x86\x47\xc9\xea\x6a\x36\xb8\x60\x48\x7a\x68\xe4\x4d\xbf\x9a\x62\x34\x11\xe5\xf6\x8e\xa8\x56\xb0\x60\xad\x41\x45\x74\x83\xca\x32\xc8\xd5\x05\x9c\x64\x3b\x04\xed\x45\x37\xda\x7f\x2f\x59\x6d\x43\xa0\x45\x90\xc6\xa1\x0b\x13\x1d\x79\x50\x0e\x0d\x2b\x6d\x49\xcb\x1e\xba\xed\x37\xc2\xbb\xd1\xf0\xd3\x7c\x65\x58\xb3\xfd\x77\x4e\xaf\x3e\x5f\xde\xb8\x67\xe7\xd3\x9b\xf3\xcb\xd3\x1b\x80\x45\xcf\x69\x3d\xff\x7b\x9d\x7d\xfc\x16\xb6\xdb\xb9\x75\x45\x2e\x34\x3b\xfc\xbe\x5c\x44\xd0\xe3\xab\xe0\xed\xb1\xcb\x34\xa0\x7a\x25\x01\xc8\x02\x33\x3b\xd5\x10\x78\x63\xe9\xbc\x20\x7d\xe4\x84\x57\x66\x99\x80\x19\x1c\xbb\x8d\xef\x7c\x64\xe9\xd6\xd1\x30\x10\x48\x9b\xb8\x69\x59\x4b\x63\x1d\x65\x23\xc1\x53\x50\x40\xec\x3e\x94\x05\x67\x52\xe1\x41\xa8\x37\xe5\x3b\x5c\x94\xeb\xe8\x20\x83\x42\xc2\xd8\xb2\x37\x26\xa1\x9e\x3f\x73\x17\x8a\xfa\x2d\x25\xd5\x9d\xb9\x89\xa1\x13\xa4\x9f\xdc\x0c\x73\x46\x12\x0a\xff\x06\xd0\xe0\x53\x0e\x3e\xfc\xe2\xb6\x78\x7c\xdc\x79\xea\xfb\xb6\x3e\xf6\x1d\x39\xbe\x63\xb6\x0d\x4a\xac\x5b\xb5\xdb\x1d\x93\x0e\xda\x17\x95\x3f\x4b\x6e\xae\x1d\x13\xfa\x46\xb3\x4e\x7f\xa2\xab\xf1\xe2\xbe\xad\x03\x99\x7c\xe1\x61\xf7\x75\x28\x05\xc2\x70\xa1\xe8\xbc\xd6\x7b\x10\xb5\x04\xef\x82\x41\xc7\x69\x47\xc1\x17\xd9\x33\x29\xf3\xe2\x8a\x36\xc7\xc1\x1a\x67\x3a\xb9\x98\x00\x14\x7c\xbc\xbe\xfa\x37\x73\x8e\x8c\x73\xbd\xb1\xd6\x4a\xf6\xcf\x9f\xce\x4e\x6e\x26\x80\x1d\x6c\x3a\x41\x08\x61\xd4\x58\xd5\x0b\xc7\x64\x66\x21\x7a\x0d\x0a\xfb\x5b\xfd\x03\x01\xef\x9e\xb6\x3d\xe3\x09\x6f\x77\x78\x68\xd8\x85\xa8\x6a\x77\x63\xc6\x80\x23\x8e\xad\x9b\x13\x4a\xfc\x31\xcb\x9e\x71\x61\xb8\xbc\xfd\xf1\xce\x77\xa9\x1b\xfe\x2b\x0e\x6e\x83\x02\xc6\xa1\xd3\xd8\xa4\x30\x5b\xd2\xcf\x29\xdd\xd8\xc5\x3c\x62\x72\x0c\x92\x9b\x19\x82\x39\x5e\x0b\xae\xf4\xc4\x65\xd8\xd7\x19\xb7\xc8\x31\x49\x65\xdb\xc0\x73\x90\x43\x6a\x07\x8d\xf2\xf2\xd7\x54\x75\xcc\xf0\xec\x8c\xc9\x0e\x6a\x87\x96\xa2\x50\xc1\x5c\x07\xb6\xa3\xa4\xf7\xb0\xba\x05\xd9\x37\x1d\x88\x9f\x06\xa4\xfe\xcc\xad\xf2\xe2\xd6\x42\x24\xa5\x0b\xd2\xa9\x7e\x5b\x25\xc1\xba\xd1\x86\x1b\x8b\xd4\x1c\x16\x83\xfb\x71\xfd\xf5\xa1\xae\x0b\xda\x9a\xea\xb3\x84\x36\x18\x6d\xa3\x3b\x5c\xf9\x6a\x70\xf0\x6f\x32\x29\xac\xb7\xa5\x1f\xae\x89\x2d\xd8\xb0\xcb\xaa\xca\x4b\x79\x27\xac\x36\x71\xd8\xc9\xe5\x19\x73\x3c\x02\x06\xb3\x67\xc6\xb8\x09\x9a\x1d\xdd\xa6\x29\xeb\x1e\xa8\xc7\x96\x56\x6d\xaf\x31\x63\x23\xdf\xba\xa0\x6c\xc8\x1e\x98\x5f\xef\x8f\xdb\xee\x21\x1b\x58\xa2\xef\x22\x07\x14\x0f\x22\x55\x07\xb0\xaa\xa0\xed\x1e\x13\x80\xa8\xe3\xea\x3a\xc2\x8c\x87\x8a\x63\x15\x0c\x75\xc9\x54\x0e\x56\x03\xf2\xa2\x8c\x1d\x81\xc7\x8e\xd9\xdf\x9d\x6d\xb1\xa0\xbf\x15\xaf\xb5\x51\x8e\x8e\x6d\xef\x6b\x9e\x90\x77\x8e\x52\x0d\x92\x39\xe1\xa9\xdb\x8c\x52\x8f\xfd\x8d\xfd\x58\x87\xaa\xb0\x41\x4e\xd3\xd5\x38\xa7\x77\x74\xd8\x2f\x3f\x4d\xae\x27\xf0\x7b\xc4\xe4\x97\x99\xce\xe0\x5d\x76\x04\x6c\x55\x06\x87\xc5\x89\x81\x6b\x3d\x71\x12\x71\x3a\x09\xd5\x7a\xc0\x29\x3b\xe5\x35\x50\xd7\x86\xa0\x7b\x79\x69\x83\xdf\x7f\x37\xc6\xe9\x1e\xd6\x36\x4e\x1c\x35\x2f\x15\x86\x9f\x66\xe4\xd1\xee\x1c\xcf\x46\xc3\x5a\x42\xc7\x69\xe8\xb6\x02\xea\x75\xe3\x74\xad\xf5\x3c\xd6\x8f\xa0\x29\x0f\x72\x79\x0b\xd3\x27\xdd\x79\xea\x82\x46\x56\x77\xd6\xe2\x7d\x72\x7c\x65\xb8\x50\x34\x0a\x5c\x4b\x4a\x3a\x67\xd0\x08\x40\x2e\xca\x46\x00\x4b\xfa\x46\x2b\x60\x47\x40\x5b\x46\x35\x8a\x5f\xff\x2e\x2a\x16\x1b\xdb\x81\x3a\xa2\x6d\xcb\x70\xa9\xb5\xde\x5e\x71\xc2\x6c\xfe\x00\xaf\xc3\xce\x13\xfa\xf2\x73\xc8\x27\x23\x55\x47\x62\xd1\x00\x0c\xd1\x68\xb1\x8d\x7a\xd2\xb8\x61\xaf\x67\x90\x8d\x7c\x15\xe0\xd6\xf6\x54\xdb\xe5\xee\x3a\x1f\xae\x45\x28\xdb\x9a\x4a\x10\xe5\xbc\x2c\x6f\x03\x50\xa5\x70\x26\xaa\xcc\x6c\x55\x1a\x79\xb5\x2c\x36\x6a\x75\x56\x6b\x2f\xcc\x6c\xc2\xdc\x95\x83\x1e\x86\xe8\x9f\x8c\x94\x0a\x7d\x1b\x95\xe8\x9d\x8a\xaa\xc0\x8e\xcc\xaa\xa9\x95\x06\x9a\x1c\x5e\x0c\xda\x46\xb1\xde\xe8\xd2\x2a\x35\x2b\x45\x48\x4b\x92\xbe\xa6\xea\x16\x4a\x2e\xdc\x94\x48\x59\xc6\x6a\x22\x2a\xe2\x86\x48\x35\x3e\xb4\x29\xe2\xb8\xd0\x9b\x37\x3b\x85\xba\x51\x38\x72\xda\x9b\xc6\xd0\x57\xfb\xc3\x7a\xc0\x7b\x8b\x03\xf1\x65\x57\xd7\xb0\x1e\x2b\x98\xe7\x8c\x46\xbb\x06\x70\xe8\x75\xdc\x9a\x6d\xcb\x4e\xba\x44\x56\xc9\x59\xbc\x2d\xb8\xba\x56\x36\x82\xb5\xfa\x12\x42\xa6\xaf\xee\x42\xd9\x3b\x33\xa0\x69\x4a\x9d\x88\x74\xe4\xc9\xd1\xea\x52\xd4\x06\x29\x2b\x91\xba\x6f\xb2\x59\x5b\x76\xbd\xdb\x14\xd1\xb8\x16\xff\x7e\x63\xb6\xfa\x9c\x51\xdd\x7f\x9b\x47\x36\x2c\x92\x14\x5f\xdf\xd2\x81\x0e\x59\x68\x42\xe4\xbc\xc2\xcc\x50\x93\xfe\x34\x9e\x2f\x12\x7e\x83\x76\x42\xc3\xd4\x30\x89\x5b\xb9\xd2\x75\xbe\x74\xae\xd5\x34\x11\xbb\x46\xd7\x04\xfe\xc6\xf7\xd0\xaa\x29\xd8\x66\x6a\x77\x19\x4f\x95\x06\xda\x98\xcd\x2e\x4a\xc5\x5b\x8f\x36\x3a\xa8\xb7\x68\x65\xe4\x8b\xb6\xa4\x96\xfa\x26\xdb\x94\x79\x35\x5f\x8f\x4d\xc6\x2a\xd6\xda\xde\xd5\x05\xdc\x30\x29\x1b\x32\x96\x0f\xf4\x67\x0c\xa6\x88\x30\x1f\xe5\x53\xe9\xc9\x93\x3c\x0f\xde\xdc\xea\x2e\x57\xfe\xed\x82\xc0\x02\x4d\x4f\xae\x69\x6b\xcd\xaa\xb6\xba\x85\x2b\x66\xa0\xa8\x6c\xd3\x43\x63\x83\xce\x54\x44\x94\x0f\xb5\x2e\xc6\x46\xa1\xd6\x6a\x40\x1f\xbd\x47\xf8\xe8\x7d\x8d\x08\x6a\xfa\x00\xff\x53\xd8\x50\x29\x68\xc4\x91\xd6\xb0\x1a\xdb\x5f\xc5\xae\x78\xd9\x10\x12\x43\xa6\x5d\xca\xea\xa9\x3d\x7e\xec\x37\x05\x74\xf3\x26\xc8\x8d\xfe\x17\x00\x00\xff\xff\x6f\xb3\xb6\x60\x20\x2d\x00\x00")

func genAssetsScope_subsTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsScope_subsTmpl,
		"gen/assets/scope_subs.tmpl",
	)
}

func genAssetsScope_subsTmpl() (*asset, error) {
	bytes, err := genAssetsScope_subsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/scope_subs.tmpl", size: 11552, mode: os.FileMode(436), modTime: time.Unix(1448047066, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsScopesTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8d\x31\xae\x02\x41\x08\x86\xeb\xc7\x29\x08\x79\x85\x36\x6b\x6f\xe2\x15\xac\xbc\x00\xee\xe2\x66\xe2\x30\x3b\x0e\x74\x9b\xbd\xbb\x50\x58\xf1\x91\x1f\xbe\xbf\xf3\xfc\xe6\x55\x70\xdf\x71\xba\xb3\x0a\x1e\x07\x40\xd1\xbe\x0d\xc7\x13\xfc\xd1\xc2\xce\x4f\x36\xb9\xd8\xa7\x52\xec\x2f\xf5\x1c\xe6\xa3\xb4\xd5\x12\xbd\xa8\x10\x9c\x01\x42\x31\xb8\x85\x0b\xff\xe3\xa7\x0a\x5e\x6f\x38\x3d\x92\x2c\xad\x98\x1d\x2e\xda\x2b\xbb\x20\xd9\xbc\x75\xa1\xdf\x69\xe4\x91\x4a\x5b\x92\xbe\x01\x00\x00\xff\xff\xfa\xbb\x9f\x00\x94\x00\x00\x00")

func genAssetsScopesTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsScopesTmpl,
		"gen/assets/scopes.tmpl",
	)
}

func genAssetsScopesTmpl() (*asset, error) {
	bytes, err := genAssetsScopesTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/scopes.tmpl", size: 148, mode: os.FileMode(436), modTime: time.Unix(1448006854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _genAssetsStarterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xbd\x6e\xc3\x30\x0c\x84\xe7\xe6\x29\x6e\xeb\x52\x38\x7b\xb7\xfe\x64\xe8\x52\x74\x68\x1f\x80\xb1\x19\x47\xa8\xf5\x03\x89\x41\x6c\x08\x7e\xf7\x52\x42\x8c\xda\x40\xb8\xf1\xee\xc3\x1d\x19\xa8\xfd\xa5\x9e\x91\x33\x9a\x4f\xb2\x8c\x79\xde\xed\xf6\x7b\xbc\x74\x1d\x26\x7f\x89\x10\x3a\x0e\x9c\x60\x1c\xce\x1c\xf9\x09\x3e\x82\x9c\x17\x5d\x1e\x0b\x77\x32\x03\xe3\x6a\xe4\x0c\x95\xd0\xf4\x01\x3c\x0a\xbb\x64\xbc\x6b\xd4\x2f\xc8\x61\x24\x1b\x94\xfa\xae\x49\xcf\x45\x92\x29\x30\x7e\x12\xdf\xe2\x91\x6b\xe7\x32\x1f\xef\x5a\x27\x45\x79\xd0\x41\x3d\x2b\x49\x34\xae\x5f\x53\x07\x4b\x66\xb8\xa3\xbf\xbe\xc5\x29\xc8\x17\xa5\x74\xf5\xb1\x2b\xce\x7c\x3b\xa4\xb6\x6e\x6d\x58\x33\xea\x6b\x79\x1d\xb0\x05\xfe\x0b\x4a\x0c\x8e\x6d\x71\x11\x16\xfb\x74\x71\xad\xe8\xb3\xe9\x2f\x00\x00\xff\xff\x04\x39\xac\xd1\x49\x01\x00\x00")

func genAssetsStarterTmplBytes() ([]byte, error) {
	return bindataRead(
		_genAssetsStarterTmpl,
		"gen/assets/starter.tmpl",
	)
}

func genAssetsStarterTmpl() (*asset, error) {
	bytes, err := genAssetsStarterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "gen/assets/starter.tmpl", size: 329, mode: os.FileMode(436), modTime: time.Unix(1448036076, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"gen/assets/conn.tmpl": genAssetsConnTmpl,
	"gen/assets/lib.tmpl": genAssetsLibTmpl,
	"gen/assets/mapping.tmpl": genAssetsMappingTmpl,
	"gen/assets/scope.tmpl": genAssetsScopeTmpl,
	"gen/assets/scope_subs.tmpl": genAssetsScope_subsTmpl,
	"gen/assets/scopes.tmpl": genAssetsScopesTmpl,
	"gen/assets/starter.tmpl": genAssetsStarterTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"gen": &bintree{nil, map[string]*bintree{
		"assets": &bintree{nil, map[string]*bintree{
			"conn.tmpl": &bintree{genAssetsConnTmpl, map[string]*bintree{
			}},
			"lib.tmpl": &bintree{genAssetsLibTmpl, map[string]*bintree{
			}},
			"mapping.tmpl": &bintree{genAssetsMappingTmpl, map[string]*bintree{
			}},
			"scope.tmpl": &bintree{genAssetsScopeTmpl, map[string]*bintree{
			}},
			"scope_subs.tmpl": &bintree{genAssetsScope_subsTmpl, map[string]*bintree{
			}},
			"scopes.tmpl": &bintree{genAssetsScopesTmpl, map[string]*bintree{
			}},
			"starter.tmpl": &bintree{genAssetsStarterTmpl, map[string]*bintree{
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

