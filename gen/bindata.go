// Code generated by go-bindata.
// sources:
// assets/conn.tmpl
// assets/lib.tmpl
// assets/mapping.tmpl
// assets/scope.tmpl
// assets/scope_subs.tmpl
// assets/scopes.tmpl
// assets/starter.tmpl
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path/filepath"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsConnTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x94\xcf\x6e\xd4\x3c\x14\xc5\xd7\xf1\x53\xdc\x46\x5f\x3f\xc5\x25\x18\xb5\xcb\x4a\x23\x44\x5b\x58\x20\x54\xa0\x5d\x56\x5d\xb8\x1e\x27\xb2\xc8\xd8\xa9\xed\x69\xa9\x46\xf3\xee\xdc\x6b\x27\x99\x20\x46\x14\x10\xac\xe2\xbf\xe7\xfc\x7c\x1c\xdf\x5e\xaa\x2f\xb2\xd5\xb0\xd9\x80\xb8\x94\x2b\x0d\xdb\x2d\x63\x66\xd5\x3b\x1f\xa1\x62\x45\xb9\x94\x51\xde\xc9\xa0\x5f\x85\xfb\xae\xc4\x7e\xb3\x8a\xf4\x09\xd1\x1b\xdb\x06\x6a\x46\xb3\xd2\x25\xe3\x8c\xc5\xa7\x5e\xc3\xb9\xb3\x16\x70\x76\xad\x22\x6c\x58\x71\x84\xdb\xc4\xc5\x19\x2b\xde\xf4\x3d\x4e\x35\xa6\x65\x85\xd7\x8d\xf3\x2b\x19\xe1\xce\xb9\x8e\xba\x71\xed\x2d\xaa\x0d\xfd\x0f\xae\x85\xa3\xce\xb5\x02\x1b\xad\xf6\x0c\x79\x9a\xb5\x55\xf0\xb1\xd7\xb6\x5a\x7a\xf3\xa0\x3d\x81\xd6\x40\x68\xd7\x6e\xed\x95\x4e\xe0\x19\x89\x43\x75\x44\x0c\x35\x68\xef\x9d\xe7\x04\xa1\xe0\x74\x01\xff\xd3\xe8\x66\xcb\x0a\xd3\xc0\x4e\x05\x16\x0b\x28\x7b\x17\x62\xeb\x75\x28\x69\x71\xa1\xc4\x04\xb8\x00\x3c\x88\x1e\xc6\x46\xca\x71\x10\xa5\x1e\xa4\x27\x9b\x6c\x85\x3e\x78\xd2\xe4\x8b\x6b\xe8\xdc\xcf\x10\xf3\xc4\x42\xcb\x0f\x16\x60\x4d\x97\xdc\xb3\x0f\x75\x93\x52\xb2\x51\x62\x4a\x0f\x95\x2f\xf5\xe3\xd4\x9d\xa9\xf3\x31\x49\x50\x35\x6d\x9f\x72\xab\x14\xa4\x44\x38\x9c\x77\xce\xea\x8a\xe7\x6e\x0a\xe6\x64\x97\x0c\x7a\x5f\x9c\x9d\x42\x3a\x03\xb6\x27\x0b\x1a\x9a\x3a\x75\x22\xcc\xe9\xd0\xc4\xd8\xae\x27\x72\x4c\x28\x4f\x0c\x1d\x9a\xc1\x8b\xa4\x31\xfc\xd4\x74\x9e\x1d\xe8\xc9\x1e\xc8\xb7\x5f\xb5\xaa\xee\xd7\xda\x3f\x0d\x37\x5a\x83\xf4\x6d\x00\x21\x84\xb1\x51\xfb\x46\x2a\xbd\xd9\xe2\x35\x53\xc2\x57\x3a\xac\xbb\x38\xbf\x6b\x4c\x34\x39\xcd\x33\x4d\x03\xe2\x13\x8a\xc5\xa6\x2a\x0f\x03\x1c\x3e\x94\x35\x24\x8f\x2c\xce\x53\xcc\x23\x15\x26\x20\x12\x85\x12\xef\xd2\xe9\x3e\xd3\xca\xcc\xc4\xf3\x06\x84\xe1\x7b\xd8\x67\x0b\x9f\x81\x4f\xef\xe2\xca\x3d\x86\x7f\xc0\x9e\x29\xfe\x0c\x1e\x91\x7e\x85\x7f\xc4\xff\xdb\xd4\x64\xff\xdb\xe0\x3f\x2c\x9f\x4a\x41\xfe\x0e\x90\x07\xb3\x87\x3d\x7b\x69\x69\x47\xfe\x2d\x7b\xe9\x63\xa0\x17\x31\x54\x37\x71\xdd\x77\x26\x56\x03\x76\xf9\xba\xe4\xf9\xc9\x5b\xfd\x98\xdc\xe0\xe6\x36\xaf\x64\x05\xea\x82\xa9\x81\x14\x48\xc0\x4b\x8b\x35\x35\xe9\xdd\x9c\x76\x58\x05\x52\x93\xbf\x3c\xbe\x4d\xd6\x93\xc0\x02\x64\x8f\x45\x62\x59\x8d\x23\x35\x60\x81\x45\xdf\x29\xb9\xff\x0e\x97\x65\xd6\xad\xc1\xbc\x38\xe6\x39\xb8\x9f\x09\x64\xd7\xef\x4c\xf9\xee\xcd\x8d\x47\x7b\xef\x8c\x9d\x6d\x2a\xcb\x7d\xc9\x62\xc1\x08\x54\x30\xd2\x2f\x4a\xe4\xf3\x0b\x1b\x26\xd9\xf6\x5b\x00\x00\x00\xff\xff\x9d\x7c\x33\x90\x43\x06\x00\x00")

func assetsConnTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsConnTmpl,
		"assets/conn.tmpl",
	)
}

func assetsConnTmpl() (*asset, error) {
	bytes, err := assetsConnTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/conn.tmpl", size: 1603, mode: os.FileMode(436), modTime: time.Unix(1448035636, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsLibTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x3c\x6b\x73\xdb\xb6\xb2\x9f\xa5\x5f\x81\xcb\x99\xa4\x64\xac\x4b\xa7\xe9\xe3\x83\x6e\xdd\x8c\x13\x2b\xa9\x5a\x45\x76\x2d\x25\x9d\x7b\x3c\x9e\x0e\x4d\x41\x36\x8f\x29\x92\x21\x29\x39\x3e\xae\xfe\xfb\xd9\x5d\x00\x04\xf8\x90\xe4\x67\x8e\xcf\xd4\x9d\x4e\x64\x02\x8b\x7d\xef\xe2\xc1\x05\x13\xcf\x3f\xf7\x4e\x39\xbb\xba\x62\xee\xd0\x9b\x71\xb6\x5c\xb6\xdb\xdb\xdb\xa7\x71\xf7\x94\x47\x3c\xf5\x72\xce\x26\x29\x3b\x99\x07\xe1\xa4\xdd\x0e\x66\x49\x9c\xe6\xcc\x6e\xb7\xac\x89\x97\x7b\x27\x5e\xc6\xb7\xb3\xcf\xa1\x05\xcf\xd3\x59\x8e\x3f\x59\x9e\x06\xd1\x69\x86\x7f\xe6\xc1\x8c\xe3\xef\x69\x90\x9f\xcd\x4f\x5c\x3f\x9e\x6d\x7b\x7e\xc6\xc3\x90\xa7\xd9\xf6\x24\xdd\xce\xfc\x33\x3e\xf3\xac\xb6\xd3\x6e\xe7\x97\x09\x67\x23\x3f\x86\x7f\x83\x28\xe7\xe9\xd4\xf3\x81\xa3\x76\xcb\x8f\xa3\xc9\xe8\xf7\x81\xed\x30\x5b\x20\xee\xb0\xa3\xe3\x02\xe2\x6a\xe9\xb4\x5b\xbf\xcf\x79\x7a\xb9\x01\xe6\x63\x02\xdc\xf2\x0d\x40\x7b\x3c\xe4\x1b\x81\x32\xe4\x11\xd5\x04\x40\x02\xa6\xdd\x7a\x1b\x47\x11\x3c\xbe\xc0\xdf\x76\x6b\xc4\x73\x6a\xa0\x47\x47\x08\xd5\x6e\xfd\x33\x0e\xa2\xfd\xa8\x40\x4b\xad\x06\x99\x93\x38\x0e\x1d\x01\xe5\x9d\x84\x26\xf2\x1c\x9f\x2b\x04\x51\x2b\x19\x3c\x1f\x1d\xe3\x5f\x41\x1e\xc4\x40\x97\xf8\x8c\xbc\x10\x39\x51\x7f\x0b\xe2\x4b\xa9\xdf\x52\x2b\x22\x9b\xfb\xb9\x54\x72\xc4\x56\xfc\x27\x85\x22\x2e\x3a\x8c\x7e\x76\xc3\xc0\xcb\x0c\x10\xcd\x55\x38\x9f\x45\x59\x23\x9a\xa3\x63\x05\x15\xa7\x13\x9e\xae\x20\xa6\xa1\x50\x11\xcd\x98\xaa\x50\x7c\x42\xe2\xd4\x80\x8f\x8e\xa5\xe6\x83\xc8\x0f\xe7\x93\x3a\x40\x19\x55\xa1\xc8\x06\xb8\x92\x9a\xcf\xbc\x05\x0c\xd8\xc4\x19\x40\xf1\x4f\x5e\xb8\x82\xa8\xe1\x52\xed\xd6\x69\x1a\xcf\x93\x37\x97\x1b\x10\xfa\xf3\x34\xe5\x11\x78\x16\xea\xb8\xc3\xe4\xa3\x30\x85\x82\x09\xb2\xbd\x20\xcb\x41\xde\xbc\x8e\x09\x1d\xac\xdd\x0a\x83\x59\x90\x77\x58\x3c\x9d\x66\xbc\x0a\x84\x4e\xf3\xe3\xf7\xed\xd6\x9c\x62\xa5\x59\xf9\x33\x2f\x39\x12\xd4\x4a\x32\x80\x83\x4d\xe7\x91\x0f\xee\x4c\x9e\x55\x76\x3f\x87\x99\xf1\x81\xfe\x96\xf2\x7c\x9e\x46\x8c\x80\x5d\x74\xbe\x4d\x08\x1a\xfc\xbd\x09\x8f\x34\xa0\x81\xad\x86\xe9\x33\x26\x8b\xd5\xf1\x8d\x58\xb7\xb7\xd9\xa8\x37\xe8\xbd\x1d\x33\x5b\x7a\xb4\xc3\xde\x1d\xee\x7f\x60\x36\x79\x3f\x8c\x25\xe7\x74\xd8\x1f\xbf\xf4\x0e\x7b\x08\xa4\x08\x3b\x34\xf8\xfd\xe1\xfe\xc7\x03\xf6\xe6\xff\x99\x4d\x96\x05\x2a\x0e\xfb\x65\xf7\x53\x7f\xf8\x9e\xd9\xc2\x79\x24\xe0\xfe\xe1\x5e\xef\x90\x00\x29\x26\xa8\x83\x0d\xfa\x1f\xfa\x40\x99\x0c\xe5\xb0\xfd\x77\xef\x46\x3d\x78\x14\x06\xc3\xf4\xf3\x39\x64\xdd\x9d\xc2\x2f\xd0\x7f\x16\xe8\x66\xd4\x66\x48\x82\x1d\xc1\x94\x85\x1c\x52\x8e\x5b\x88\xb1\xb3\xc3\x5e\xa2\x88\x84\x66\x87\x79\x49\xc2\xa3\x89\x0d\x0f\x1d\x66\x09\x99\xad\x0e\xcb\x5c\x92\x73\xcb\x72\x5f\x58\x40\x71\xc9\x78\x98\xf1\xcd\xa3\x44\xda\x77\x7f\x05\xdd\x68\x92\x00\x01\xff\x3b\x88\x86\x44\x06\x96\x32\x37\x8b\xe7\x29\x64\x77\x60\x26\x0a\x42\x76\xc5\xa0\x3d\x9b\x9f\x90\x65\x10\x88\x00\x35\xd5\x06\xa2\x68\x0d\xcd\xa8\x50\xe6\xb2\x09\x32\x73\xc9\x54\xae\xeb\xc2\x14\x63\xea\xa3\xb0\x18\xfb\x59\x6a\xc4\x07\x5e\xfd\x05\xea\xd1\xe8\xa7\xb9\xa0\x59\x70\x32\x3e\x30\xe1\xa3\x31\x85\x0d\x0a\x08\x7c\x42\x6c\x44\x17\x24\x57\xa2\x0b\xea\xca\x2b\x34\x71\xe8\x85\x2c\x5a\xa1\xc1\x80\x88\x72\x25\xcb\x91\x40\xd3\x38\x65\x7f\x76\x98\x42\x81\xec\xa6\x5e\x04\x93\xb7\x81\xb6\xc0\x58\xc7\xa9\x47\xba\x7a\xd6\x94\xd0\x4b\xa9\x46\x43\x4f\xc2\x5b\xb5\x8e\x1a\xd4\x20\x1c\xdb\x6a\x56\x92\xc2\x20\xf4\xd0\xa8\x24\x02\xa1\x4c\xa9\x95\x55\xd0\xa7\xb0\x58\x4b\x5e\x85\xd0\x4a\x06\x08\x45\x09\x75\xe6\x52\x6c\xb1\xff\x91\xee\xd7\x8c\x98\xc2\x10\xcc\x0b\x8b\x1a\x77\x94\x80\x6b\xe7\x53\xdb\x7a\xb6\x80\x96\x17\x12\x81\x63\xa2\x94\x09\x75\x3d\x4e\x11\xcc\xab\x90\xca\x10\x97\x58\x55\x6a\x2b\x45\x15\x61\x81\x70\xea\x30\x54\xde\x75\x92\xa6\xf6\xe2\x75\x19\x6f\xe1\xa5\x84\xb1\x3a\x33\x51\xda\xad\xa6\x1b\xe9\x82\x3a\x11\x6b\x1f\xac\xe4\x61\x11\x57\x84\xa3\xd0\x04\x3d\x1a\xa3\xdd\x71\x4c\xec\xad\x0c\xa2\x02\x70\x61\xf8\x48\xa3\x7a\x24\x6a\x8b\xed\x0e\xf7\xae\xad\xa4\xde\x67\x24\xc4\x4a\x1a\x29\xc3\xd0\x02\x09\x85\x2c\x58\xb9\x12\xc9\xad\xab\x04\x36\x67\x66\x91\x76\x11\xe5\x8e\xf6\x05\x9f\x94\x02\xa2\x59\xfd\x11\x1b\x7e\x1c\x0c\xac\x52\x5a\xd5\xdd\x3b\xec\xb5\x45\x0d\x52\x15\xe5\x94\x0e\x8d\x4b\xe1\x1d\x35\x4d\x6b\x4f\xab\xf4\x80\x06\x9d\xf2\x44\xb9\x49\x23\x43\xfe\xf5\x55\xb2\x3f\x5e\xab\x96\x9f\x7e\x7e\x04\x7a\x79\x9f\xdf\x42\x2d\x14\x00\x2b\x35\xd3\x91\xf1\xd1\x85\xf4\x6b\xa1\x8c\x1d\x19\x05\xdd\xea\x2a\x91\x64\xec\x7c\x0d\x21\xf9\x03\x4b\xb9\xf3\x18\xc4\x1c\x3c\xb0\x2d\x7f\x7a\x1c\x42\x5e\xc7\x96\x77\x12\xf3\xab\x19\x13\x56\x26\xb3\x79\x98\x07\x98\x46\xe6\x9c\x19\x6b\xfd\x75\x1a\x78\xc3\xf3\x0b\x0e\x2b\x89\x30\xbe\xe0\x69\x87\xcd\x81\x62\xfa\x70\x46\x7f\xd3\x1b\xff\xd1\xeb\x0d\xd9\x6b\x9a\x80\xd6\x29\xc6\xe4\xe7\x6b\x78\x42\x3f\xa2\xd9\x94\xc1\xf4\xb9\x41\x7a\xb9\xf4\x42\x68\x63\xb7\x00\xad\x29\x9f\x86\xdc\xcf\xdd\xf1\x65\xc2\xf7\xa7\x04\x70\xf4\xf2\xd8\x71\x7f\x0b\x80\x43\x02\x55\x10\xa3\x30\x10\x47\x37\xad\x56\x4a\xeb\x69\xd5\xf1\x09\x4d\x67\x8c\x45\x08\x99\xcf\x67\xde\x39\xb7\x4b\x3a\xea\xb0\x74\xe1\x0e\x80\x15\x5a\x19\xd0\xa2\x23\x40\x64\x2f\xff\x0f\x7e\x7f\x2a\x3a\xe1\x69\x6b\x4b\x10\x23\x5c\x47\xc1\x31\xa0\x83\xde\x7e\x34\xe1\x5f\xec\xc0\x81\x3f\x24\x4e\x5a\xc8\xe3\xda\xa1\x25\x27\x8b\x05\x99\x5a\x92\x56\x8b\xa3\x42\x7a\xe7\x2e\xae\xd0\x1f\x32\xdb\x62\x5b\xe5\xf5\xc9\xc2\x87\xc5\xc9\x6b\xdc\x0e\x41\x8f\xf5\xda\x29\x39\x08\xad\x76\xbe\xc2\xe4\x1e\xe7\xd7\x77\x86\x07\x54\x10\xce\xf8\x8f\x56\x49\x83\x00\x24\x06\xae\x24\x67\xf7\x9b\x25\x06\xfd\xdf\x7a\x6b\x93\x03\x10\xfd\x1a\x39\xe1\x8f\x33\x9e\x72\xda\x67\x2a\xcb\x5e\xd3\x2b\x9a\x44\x47\xd9\x70\x77\x52\x08\x55\x58\xea\xce\x32\xac\x13\xa2\x15\xcf\xe1\x91\xfc\x26\xc2\x83\x6b\x25\x49\x7e\x46\xfb\x60\x90\x45\x0a\x5b\x97\x42\xee\x62\x08\x52\xef\x60\xe4\x40\x14\x4a\xf4\xec\x88\x26\x57\x9d\xe9\xea\x23\x2b\x47\xe4\x45\x3c\x5f\x18\x49\xb2\xf1\x39\x1d\x1f\x10\x88\x3c\xee\x45\xb6\x24\x15\xc8\x55\x00\x40\xa9\x4a\x83\xd4\xd4\x41\x8d\xe5\x1d\x22\x25\x37\x6b\xd0\x7b\x37\x66\xbf\xee\x43\xd0\x3c\xcb\xd8\x3e\xfe\x4b\x3e\x24\x19\x75\xf5\xc1\xb1\x68\x35\xf9\xc2\x06\x91\x46\x35\x8d\xe2\xd4\xb4\x81\xbe\xea\x53\x8c\x17\x23\x99\x92\x0e\x86\x84\x97\xb6\xee\x05\x85\xe4\x41\x34\xe7\x98\x5c\xf5\x02\x5e\x29\x99\x64\xa2\xf1\x95\xad\x62\x89\x11\x91\xc4\x1b\x55\x5a\x20\x58\xaf\xd6\x5b\x29\x76\x9d\x6a\x57\x29\xb7\xae\x5e\xa5\xe0\xbb\xa8\x78\x93\x92\xb5\x9a\x5b\x2d\x7a\x5e\x1a\x13\x1a\x9e\xdd\xf0\x34\x8d\xd3\xd2\xf6\xf8\x1a\x89\xa0\x15\x44\xd1\xdf\x25\x86\xfa\xc3\x61\xef\xf0\x29\x88\x1e\x24\x88\x56\xeb\xf6\xbf\x35\x8a\x6e\x36\x9f\x1a\x4a\x2d\x62\x88\x78\xe4\xcd\xef\xfa\xe8\x68\x3b\x9f\xd0\x0b\xd7\xc2\xe3\x31\x28\xdc\xd1\xef\x83\x31\xe9\x49\x0c\x77\xa9\x4b\xbc\x00\x04\x09\x72\x3a\x90\x1b\xd1\x9b\x53\x97\xe0\xb2\x23\x24\x7a\x5c\xc4\xe3\xd9\xcc\x08\xc6\xcc\xfd\xc5\xcb\x3e\x78\xd1\x25\x59\x37\xf1\x70\x55\xf2\xc1\xcb\xfd\x33\x84\x39\x9b\xb9\x07\xd4\x22\xde\xfb\xe2\xf1\x0c\xfe\x3e\x7f\x8e\x3d\x6f\xcf\x82\x70\x52\x74\xd4\x79\x11\xb1\x6b\x62\x84\x71\x8a\x67\xf3\xa5\x25\x8c\x56\x82\xfe\xf5\x17\x6b\x06\x00\x7a\xf4\x2a\xcb\x11\x4e\x98\x9c\xfb\x65\xfe\x0e\xd2\x60\xe6\xa5\x97\xbf\xf1\x4b\xb1\xa4\x12\x8b\x79\x69\x9f\x7a\xa0\x3f\xcb\xdc\x67\xe8\x31\xf4\x2b\xdd\xb0\x49\xc3\x65\x05\x38\x4d\x80\x92\x5e\x19\xb2\xc3\x80\x43\x73\x4c\x5d\xaa\xf5\xb8\xb4\x72\x3b\x85\xae\x45\xaf\x81\xd5\x01\xbf\x4e\x45\x3e\xc0\x55\x16\xc2\x98\xa6\x2b\x1b\xc8\xb0\x5c\xc5\xa6\xab\x4c\x67\x20\x7c\xdc\x96\xbb\xa9\x72\xd7\x19\x6a\x85\x17\x68\x5d\xde\xbb\xe1\x96\xab\x02\x93\xc6\xee\x4f\x9f\x02\xf3\x29\x30\x9f\x02\xf3\x31\x05\x26\xcc\x98\xfb\x11\x7f\x8a\xcb\xa7\xb8\x7c\x8a\xcb\xc7\x14\x97\x6f\x78\x18\xc3\xd6\x72\x1c\x3f\x85\xe6\x53\x68\x3e\x85\xe6\x7f\x26\x34\xa5\xb4\x16\x96\xb1\x78\x61\x56\xdb\x17\x57\x4b\xff\x20\x64\x79\xad\x22\xd5\x28\xde\x7b\x7e\xad\xdd\xf5\x41\x38\xf7\xcf\xc5\x51\x01\x96\xb2\xe8\xd7\x11\xb4\x5b\x77\xe4\xab\x2b\x21\xa8\xae\x82\xa4\x3a\x9c\xfa\x79\x3c\x96\x14\xec\xf5\x47\xe3\xfe\xf0\xed\x98\xd1\x1b\x88\x3a\x4c\xe9\xec\x5a\x94\xb5\x1a\x65\x30\x0d\x03\x10\x3c\xeb\xb0\xc5\x42\xef\xe6\x65\xad\x21\x88\x1a\x5f\x64\xc4\x6a\x65\xa7\x4f\x35\x58\xb6\x18\x26\x4a\x5b\x40\x08\x04\x33\xea\x88\xa4\x9a\x74\x05\x0e\x21\x22\xf6\x74\xe1\x9f\xae\xce\x99\xf0\x29\x4f\x19\x12\x74\x41\xf5\x19\x05\x08\x66\x53\x6a\x19\xf2\x2f\xb9\x2d\x9c\x1b\x4b\x7e\x72\x3e\x4b\x8a\xda\xd1\x16\xd2\xdd\x11\x70\x23\xdf\x8b\xec\xe7\xd8\x2d\xc3\xab\xc2\xd3\x4a\xa6\x28\xb8\x9b\xca\x78\x24\x2e\xe3\x50\x45\xb4\x03\xc6\x6b\x99\xbe\x1f\xe5\xc2\xee\x54\xa3\xfa\xb0\x66\x7f\x64\x76\x27\x89\x9b\xcd\x2e\xbb\x6e\x61\x75\x59\xea\x7b\x3b\xa3\x97\x39\x7a\x30\x9b\x8f\x03\xca\xcb\x60\x74\xbc\x47\xe0\xe2\xe3\xdf\xca\xf0\x85\xd4\xcd\xc6\x37\xba\x6f\xe1\x00\xc5\xe8\xdb\x3a\x41\x9d\xbb\x87\x70\x84\x95\x77\x1a\xaa\xe5\xdf\x9b\x10\x89\x63\xe0\x8c\xad\x7c\x99\xe1\x65\xa2\xf6\x57\x53\xbc\xd9\xbb\x4b\xcf\x2c\x2b\x16\xb6\xdd\x7c\x90\xee\x99\x05\xca\x37\x3e\xf4\x96\xa3\x55\x83\x89\x44\x5e\x52\xa8\x0c\x17\xad\x34\xd0\x2c\xcc\x2d\x3a\xc5\x8d\x85\xfa\x20\x6a\x57\xc3\x8c\x62\x5d\x01\xa0\xee\x2f\x54\xc6\xc9\x66\x1a\x26\xff\x16\xa3\x6e\x62\xb6\x44\xce\xfb\x73\x3f\x2f\x1f\xad\xa7\x3c\x9b\x87\x79\xb9\x98\x87\x72\x03\xda\x72\xc2\xb3\x5c\x94\xa1\x34\x94\x9f\x88\x91\x8e\xdb\x0b\xf9\x0c\x8d\x8c\xde\x59\x03\xfe\x07\x4f\x63\xbb\x40\x43\x55\x2f\x74\xfa\xce\x61\x10\xc2\x55\xbb\x0a\x6c\x8b\xc8\x44\x33\xe4\x17\x36\x0e\x41\xa9\xa7\x61\x9e\x1a\x7d\x71\x7a\xb5\xc0\x1c\x92\x60\xdb\xf3\x24\xf4\xf0\x35\xdc\xd5\xd1\xf1\x0b\xd9\x8f\x91\x88\x2d\x78\x19\xab\x56\xfe\x82\x38\xdd\xe1\x7c\xf6\x2e\xe0\xe1\xc4\xac\x82\x99\x22\x10\xf5\x8a\xae\x40\x86\xf1\xd4\x1d\x7b\xa7\xee\x7b\x9e\xdb\x96\xc8\x6e\x96\x83\x61\x6d\x59\xe6\xcb\x34\x9d\xf7\x2a\x5e\x2e\x4b\xf9\x1b\x90\x20\x7a\xf3\x65\xd5\x0a\x44\xa5\x65\xa8\xc4\x46\x6d\xe5\x4a\x68\x63\x9d\xdc\xb8\xb8\x8d\xf4\x9a\xb6\x79\x51\x2b\x5e\x69\x4d\xcd\xc5\xaf\x5c\xc5\xca\xf4\x94\xc0\xd6\x81\xf4\x6a\x30\xa7\xdb\x3a\xec\x79\x45\xfb\x01\x96\x11\x75\x59\xd0\x91\x9b\xc3\x2e\x23\x3b\x62\x5d\xb2\x28\xf7\x98\x2e\x65\x66\xc3\xa4\x9e\xdd\x6e\x2e\xc8\x36\xcd\x05\x2a\xf9\x37\x64\xf9\xe6\x34\x5f\xcd\xe8\x89\xdb\x07\x37\xcf\xc0\x4f\x45\x25\xfe\xea\xc4\xae\x33\x79\x02\x2e\x04\x81\x18\xfc\x8b\xdb\x8b\xc8\x2c\xa3\x42\x04\x3a\x68\xb4\xb3\xef\x0a\x75\x16\x5d\x30\xc9\x45\x32\x2e\x70\x08\x29\xce\x0d\xa0\x9b\x35\x06\xc8\xd2\x88\x5b\x7c\x57\xac\x11\x39\x7a\xe2\x90\x53\x06\xdd\x66\x9b\xa4\x62\x43\xb0\x9b\xa6\xde\xa5\xbe\x29\xa5\xf2\x89\x57\x06\xc0\x2a\x38\x71\x0f\xcc\xce\x8a\xc2\x1e\x7c\x13\xa7\x5f\x64\x67\x81\xf1\x6e\xd5\x53\x95\x6f\xd0\x8a\x7b\xc7\x92\x96\x9a\x76\x44\xc5\x6e\x88\x98\xd3\xe5\xf1\xe6\x35\x3b\x5a\x8d\x98\x37\xce\x98\xbe\x3d\xb7\x10\xb7\xc5\x8e\x9a\x2f\x56\xf9\x1a\xa3\xc3\x64\xcd\xbc\x1c\x2a\x17\x43\xbe\x0c\x2d\xe4\x56\xc6\xb5\xe4\x4c\x14\x52\x9b\xbc\x16\xb0\x5b\x78\x9f\x00\xfe\x95\x20\x8a\x1c\x38\x6f\x46\x13\x99\x1d\x61\x8a\x35\x29\xf9\x67\x5e\x9a\x19\x75\x61\x27\x97\x39\x58\x3a\x7a\xf1\xea\x7f\xbf\x95\x6b\x0e\x08\x96\x3f\xb5\x22\x05\xbc\xd4\x65\xc0\x9e\xb1\x57\xba\xae\x50\x20\x13\x35\x7b\xdf\xbc\xfe\xa6\x92\x4b\xcc\xce\x0e\x74\xb2\xb2\xbe\x05\x4b\x36\x41\x39\x85\xde\x65\x22\x35\xb4\x5e\x04\x7c\x2d\xb7\x6a\xed\x26\xec\x85\x1c\x08\x6e\x22\x22\xa5\x6c\x08\x44\x14\xcf\xf3\x64\x9e\x1b\xa2\x97\xca\x15\xb1\x2e\x4e\x67\x12\xa7\x51\x17\x12\x03\x4a\x27\xfe\x14\xd2\xe9\x61\xf0\xec\x06\xaa\x58\xd1\x58\x2f\x09\xe8\x42\xc8\x59\xf0\x85\x4f\xca\xf7\x64\x21\x60\x86\xf3\x30\x94\xef\x98\x9d\x66\xd1\x74\x40\x57\xcb\x82\x8d\x20\xd0\xec\x1a\xc9\x52\xc5\x82\xf4\x1b\x9a\xf5\x1a\x6a\x3f\x0f\xf2\x54\xce\x03\xee\x54\xd1\x72\x54\xa0\x28\xee\xcb\x46\x30\x2c\x25\x52\xac\x9e\x20\x8b\x88\x29\x4a\x4b\x09\x94\x66\x36\xbc\xd6\x09\xa9\x19\xa5\x68\xb7\x4e\x98\xba\xed\xe4\xa2\x12\xde\xd0\x55\xc7\x69\xb9\xf1\x5d\x18\x7b\xb4\xe7\x09\xca\xed\x7d\xb1\x13\xca\xca\xad\xa3\xe2\x46\x65\x04\x4f\xe2\xf2\x64\x85\xff\xd8\x64\x9d\xd2\x5a\x69\xa5\xa1\x2d\x90\x4e\x59\xc5\xf1\x60\x5d\x2b\x8c\xcc\x2a\x2e\x86\x85\xb6\xd3\x6b\xea\x38\xbb\x08\xf0\xb8\xab\x02\x2f\xf2\xad\x1a\x46\xd5\x79\x5e\xc6\x4d\x0d\x82\x5c\x5d\x23\x95\x3d\x07\x04\x59\x15\x0c\x35\x58\x05\x3a\xa9\x02\x91\x46\xbf\x7b\xd5\x29\x37\xfc\xf8\x7d\x75\xe0\x14\x9e\x61\xe6\xf2\x60\xd5\x55\xed\x0a\xa4\x6f\xe8\xa8\x97\x9d\xd0\x27\xbc\x81\x26\x0c\x25\x95\x58\xd3\xe0\x38\xb4\xbd\xe3\xee\x4e\x26\xa9\x5d\x29\xf1\x5d\xae\x57\xbc\x76\x4b\x32\x2a\x25\x88\x46\x45\x6a\x0d\xae\x50\xa0\xb0\x55\x86\xd6\x0e\x26\x72\x76\xb8\x16\xd7\x38\xb7\x55\x17\xa5\x64\x05\x89\xbc\xb6\xa8\xaa\x4d\x3a\x8d\xb6\x12\xfc\x9c\xdc\x1f\x3f\x27\x84\xfa\x86\xdc\x18\x3e\x20\x18\x9a\xde\x1f\x43\x53\x85\xfd\x36\x3c\x7d\xf7\x6a\x05\x4f\xb4\x64\x9e\x0a\x10\xbb\x44\xe5\x6e\x1c\x4f\x6f\xc8\x25\x25\x22\xcd\x63\x70\x7f\x7a\x0b\x04\xee\x9b\xf3\xb3\x82\x1b\x5a\x26\x41\xe6\xb2\x0d\xdc\x77\xe4\x32\xd8\xcc\x9c\x91\x42\xee\xa2\xa1\x7e\x8d\xef\xb5\x54\x1b\xd6\x77\x94\x5c\xf6\x04\x37\x88\x0d\xb2\x46\xb1\xa0\x14\x5f\xb4\x70\xe5\xb9\x93\x79\x46\x61\xb4\x5f\xe1\xf6\xa4\x8b\x5b\x88\x0e\xc3\x5c\xd3\x65\x16\xce\x03\xa7\x3c\xb5\x3a\x6c\xc0\xa3\xd3\xfc\xac\xcb\xbe\x7d\xb9\xac\x12\x93\xe7\xdf\xf7\x41\x6f\xe1\xa5\xb8\x70\x32\xe8\xbd\xfa\xe1\x87\x1a\x41\x8c\xff\x7b\x21\x87\xa9\xd6\xaa\xa1\xa7\x03\xbe\xfb\x40\x8f\x67\x51\x59\xee\xcd\x12\x83\x86\x9f\x72\x2f\xe7\x87\xdc\x8f\xd3\x09\xac\x9e\xe9\xdb\x03\xb4\x6d\xcb\x98\x7e\x7b\x50\xbf\xf4\xda\x61\x91\x7c\xd5\x62\x1c\x37\x38\xcc\x06\x10\xf3\xf0\x51\x5e\xc3\xaf\xbc\xf3\xb1\xfa\xc3\x51\xef\x10\x6f\x36\x8c\xf7\xb1\x0a\xd2\x7e\x96\x39\xec\xd3\xee\xe0\x63\x6f\x44\x7f\xd3\xde\xd6\x6f\xd8\xcf\x56\xee\xb1\x86\xea\xde\x3c\xf6\xe9\xb5\x38\x2e\x31\xb1\xd3\xc1\x76\x47\x2e\xfa\x85\x8a\xe4\xe2\x9c\xf8\xda\x82\xf5\x3f\x3b\xec\x8d\x3f\x1e\x0e\xf1\x9b\x03\x62\x79\x5f\xdd\x23\x0b\xf9\x1c\x79\x24\x98\x9c\x8b\x85\x14\x6e\x56\xa9\xbc\x5f\xec\x4e\x0f\xe3\x0b\x71\xe9\x58\xdf\xbd\x6d\xc9\x8d\x2c\x00\xca\xc3\xc2\xe4\xdc\xd1\xf3\x76\x72\xae\x8e\x2a\xcd\x29\x1d\x0f\x5c\x8a\x2d\xb0\xef\xf6\xbe\x70\xbf\x86\x77\xf5\x96\xf4\xa5\x79\xbe\x88\x90\x93\x02\x97\x40\xed\x0e\xbc\x0c\x22\x31\xe3\x69\xde\x9f\xd8\x06\x37\x98\xa3\x82\x89\x53\x9c\x9e\x2a\xdf\x10\x5f\xb8\xb8\x2f\xdf\x28\x8e\x9d\x56\x38\xc5\xc7\x83\xbd\xdd\x71\x0f\xfd\x01\x3f\xe5\x00\x3f\xe2\xbb\x11\xcf\xb2\x9d\xd7\x37\x72\x08\xd8\x29\x14\x17\x63\x98\xba\x79\xb7\xd2\xb2\xc2\x45\xfe\xdc\xa0\x76\x63\xd7\xaf\x94\x33\xa1\xaf\xe0\x54\x95\x53\xd9\x31\xdc\x52\x15\x7b\xbd\x41\x0f\x54\x41\x5f\xd3\x30\x14\x51\x96\xa6\xa2\x8a\xdb\x4a\x58\x96\x0e\xc5\xbb\xba\x02\xe1\x60\x01\xc8\x99\x05\xbb\xdd\x69\x70\x6a\xe1\xa7\x8e\x1a\x3f\x7f\xa4\x3f\x73\x64\x7c\xd0\x08\x1f\x1a\x3f\x65\x14\x44\x34\x9d\x61\x90\xd2\xc7\x8c\xd4\xe7\x8c\x90\x6f\xa4\x53\xd9\xaa\x29\x11\x8b\xb4\x27\x37\x1b\x5a\x4e\xe5\x83\x15\x08\xb5\x03\x41\x36\x3f\x78\x89\xf9\x35\x16\x75\xf8\x41\xfd\xbb\x49\x22\x09\xeb\x1d\xca\x28\xe1\x7e\xe0\x85\xa2\x62\x58\x61\x28\x9a\xdf\xca\x13\x3b\x03\xa3\x02\x69\xb7\x86\x71\x3a\x03\xf3\x17\xe2\xb4\x0a\x5f\x19\xf2\x8b\x82\x96\x3d\x49\x83\x05\x4f\x87\xa6\x3f\x68\x46\x74\x32\x2f\xda\x30\xc6\x4b\x5c\x75\x15\x5b\x57\x78\x01\xaa\xc2\x5a\xb7\x81\x37\x01\x27\xd8\xeb\x62\xde\xe8\x94\xd6\xff\xbe\xa6\xe5\xb0\x42\xeb\xf4\xea\xbd\xa2\x59\xb9\xf7\x12\xee\x25\xca\xe5\xc1\xed\x4c\xde\x8e\x68\xd8\x71\x51\x27\xaf\xce\xa3\x3c\x7c\x83\xb2\x94\xb9\x58\x2a\x6a\xa7\x76\x80\x47\x83\xcb\x07\x30\x02\xd6\x2d\xb3\xe5\xac\x66\x5e\x7a\x86\xfc\x0e\x53\xe9\x28\xa9\x7a\x10\x44\xe9\xa2\x22\x85\xd4\x62\x55\x8c\xaa\xd0\x30\xf4\x48\xe0\xd6\x30\x65\x59\xe5\xa2\x68\xbd\xbc\xbe\x7e\x87\xde\x20\x70\x93\x28\xfa\x04\x67\x80\x97\x63\x4b\xee\x7b\x55\x28\xc5\xe8\xbb\x86\x45\x2b\x1f\x89\x18\xc7\x34\xbc\xa6\xe9\x2a\xd2\x6b\x6a\x7a\x05\xf6\xaa\x38\x07\xb0\xd6\x0d\xbe\xd4\xc2\x91\x38\x17\x7d\xc6\x67\xc4\x70\x68\xb9\x51\x9f\xe3\xf8\x25\x54\xd7\x17\x3f\xf1\x5d\x93\xd8\x96\x74\xc6\xb5\x88\x6f\xa6\x02\xa0\x50\x62\x7d\x4b\xd9\x5f\xe9\xe0\xd0\x0b\xc2\xac\xa2\x82\x82\xbe\xd1\x79\x7b\x9b\x1a\x19\xd8\x3d\x08\xe7\xa9\xd8\xe3\x9b\xad\x1f\x61\x07\x90\x66\x30\xa9\xa9\x50\x73\x0c\x17\xa8\xf2\x70\x37\x17\x58\x41\x56\x7a\x06\x92\x85\xb9\x86\x47\x13\x9c\x69\xfe\x1d\x00\x00\xff\xff\x4e\xdf\x9d\x41\x7d\x4f\x00\x00")

func assetsLibTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsLibTmpl,
		"assets/lib.tmpl",
	)
}

func assetsLibTmpl() (*asset, error) {
	bytes, err := assetsLibTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/lib.tmpl", size: 20349, mode: os.FileMode(436), modTime: time.Unix(1448043867, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsMappingTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xdc\x58\xdf\x8b\xdc\x36\x10\x7e\xf6\xfe\x15\x13\x93\x06\xfb\xba\xf8\xca\x5d\xe9\x43\xcb\x16\x42\x9a\x96\x42\x13\x5a\xee\xe8\x4b\x29\xc1\xf6\xca\x17\x51\xff\xb8\x48\xb2\x21\x59\xf6\x7f\xaf\x46\x92\x6d\xf9\xc7\xee\xda\xbe\xcd\xb6\xe4\x65\xb1\x2d\x69\xf4\xcd\x37\xa3\x99\x4f\xbb\xdb\xc1\x96\x24\x34\x27\xe0\xd2\x5c\xbc\xcb\xc2\xc7\x47\xc2\x5c\xd8\xef\x57\x0e\x4d\xa0\x82\xcd\x06\x72\x9a\xc2\x6e\xe5\x38\xd7\xd7\xb0\x2d\x20\x2f\xc4\x7b\x9a\x3f\xac\xa1\xe4\x04\x3e\x11\x56\x40\x15\xa6\x25\x59\x39\x7b\x20\xa9\xfc\x24\x57\xf1\x35\x14\xff\xc0\xf7\x1b\xa8\x02\x4f\x1a\xfd\xee\x5b\xff\x07\xfc\x80\x36\xe4\x76\x72\x42\xf0\xa6\xe4\xe2\x6d\x99\xa6\x6a\x1f\xc7\xa9\x42\x06\x82\x64\x8f\x20\x67\xe3\xbb\x7a\xde\xe0\x9b\xc7\x7d\xfc\xe0\x5d\x65\xc1\x1b\x05\x2d\x78\x55\x32\x46\x72\xe1\x07\xd2\x54\xf0\x36\xcc\x88\xb4\x21\xe7\xbe\xc0\x35\x7a\x03\x05\x43\x1b\x3e\xbd\xae\xd9\x03\x17\xe6\x5b\xb5\xae\xf5\x24\xb2\x3c\xf9\xeb\xef\xe8\xa3\x20\xad\x2b\x74\x0d\x84\x31\x1c\xe4\x82\xc5\x45\x5e\x05\x2f\x45\x41\x3d\xf9\x22\xe9\xf1\x22\xdf\x3f\xe8\xee\x04\x6f\xe8\x12\x57\xba\x5e\x38\x8c\x88\x92\xe5\x08\x52\xba\xb4\xaa\x5f\x65\x34\x57\xed\x2c\x2b\xfc\x1a\xf8\xf9\x33\x40\xdb\x3d\x95\x02\x13\x38\xe1\x0b\x38\xe1\x87\x22\xcb\x8f\x44\x76\x39\x42\x1d\xfb\x26\x9f\x66\x21\xed\xad\xad\x11\xaf\x4e\x47\x4e\xd0\x8c\x9c\x3f\x6e\x68\x35\xb8\x97\x3f\xff\x93\xd0\x4d\x20\x22\x2a\x8a\xf4\x14\x11\x54\x00\xe5\x90\x84\x08\xa5\x60\x90\x4b\x3f\xd6\x20\xde\xdb\x8c\xf0\x43\x25\x00\xed\x9f\x81\x8d\x68\x01\x1b\xd1\xa1\x44\xa6\x8b\x8a\x6d\x04\xe8\x0b\xbe\xa2\x09\xa4\xe8\x1b\xb5\x64\x5a\xa9\x45\x30\x35\x04\xbd\x4a\x1a\xdc\x80\x60\x98\x4d\xb3\x6c\x0c\x98\x50\x70\x9e\xcd\x81\x53\xef\xba\x9f\x9f\x2f\x49\x5a\x84\x92\xb1\x73\xa7\x4c\x62\x85\xc4\x6c\x71\x86\xac\x49\x16\x64\x4d\xb2\x20\x6b\x44\x82\xdf\x0d\x6e\x8f\x3e\xa9\x8d\x89\x25\xa0\xc5\x24\xd4\xfd\xa2\x9d\x0c\xda\xf1\xef\x21\xe3\xe4\x67\xf4\xa3\x6e\xca\xd4\x5f\x83\x74\x75\xa5\xd2\x0c\x67\x3f\x6b\xe3\xdc\x69\x97\x75\x32\xfd\x77\x91\x72\x9a\xc3\x65\x70\x25\x99\x08\x5e\x33\x56\xb0\xc4\x73\xff\xc4\x94\xc3\x7a\x0e\x8c\xc4\xc5\x43\x4e\x3f\x91\x2d\x84\xbc\x0e\xda\x1a\x3f\x13\x5a\xc9\x8f\x5f\x55\xee\x1a\x2a\xff\xc8\x71\x18\x9c\x87\xdb\x9b\x8b\x9e\x87\xac\x4d\xb7\xdb\x1b\x2f\x79\x52\xba\x65\x4b\x98\xcf\x9e\x78\x48\x24\xea\x2f\xee\x90\xdc\xde\x4c\x3d\x24\xfc\x8c\xe1\xe3\x4b\x88\xe0\xe7\x3b\x39\xb7\x37\x8b\x4f\x0e\xd2\x7c\x7e\x09\x76\x3e\x61\xfa\x19\xf5\x97\x4d\x43\x5c\xa4\x65\x96\x1b\x22\xb8\x66\x42\x0e\xb3\x30\x7f\x20\xf0\x5c\x8f\xa2\x6f\xc1\x2b\xf5\xc8\x35\x18\xed\x96\x19\x0e\xee\x68\xf6\x98\x92\xfb\x8f\x8f\x35\xd4\xa4\xcc\x63\xf0\x78\x5c\xc8\x2f\x57\x72\xee\xf3\x1a\xe4\x1d\x7e\xf2\x01\x3f\x99\xb5\x66\xc0\x23\x1f\x20\x08\x02\x79\x66\x09\x4b\xc2\x98\xec\xf6\xfe\xc8\x4a\xa3\x30\x94\xe1\x20\xd6\x24\x68\x5c\xb0\x51\x23\x66\x48\x84\x51\x4a\x70\xa1\xe7\xc3\xd7\x7a\xc0\x71\x03\xb7\x79\x36\x06\x8a\x5c\x62\xff\xe3\x37\x6d\x41\xc3\x0d\xd4\xaf\x5e\xba\x06\x77\x08\xd4\xf5\x87\x10\x5e\xa6\x54\x26\xe4\x06\x5c\xd7\x1a\xa3\xfc\x27\xca\x05\xcd\x63\x81\xbd\x02\x2b\xaf\x1a\x94\xb4\xa5\x24\x97\xee\xfa\xf0\x63\x23\x99\x9c\x44\x16\xe5\x77\xf2\xa4\x57\x48\xb5\xe6\x5e\x12\xb2\xeb\xc0\x7d\xfd\xc1\x23\x95\xde\x5d\x9d\xe3\xfa\xd7\x84\x58\x4d\x32\xaa\x4a\xdd\xc8\x31\x1c\x3a\xac\x36\x8f\xf7\xc5\xd0\x27\x2c\x2d\xa5\xc4\xa9\xf7\xd3\x39\x06\x57\xc3\xb5\x96\x75\x9d\x00\x12\x63\x6d\xea\x97\x42\xc5\x1f\xff\x92\x70\xcd\x54\x93\x06\xd9\x44\x14\x3e\xdc\xc5\x61\xee\x55\xd0\x49\x02\x82\x65\xa0\x66\x42\x2e\xc2\x3f\x0d\xd2\x50\xf4\xfe\xfc\xa8\x13\x75\x6f\x11\x53\x9f\x9e\x71\x9c\xba\x74\x5e\x08\x6a\xef\xa2\x3e\x1f\xed\x8b\x1d\xde\xed\x00\xef\x76\xfb\x0b\x61\xee\x5c\x51\xe7\x23\xc6\xcb\xca\x85\x90\x76\xee\x90\xf3\x91\x1a\x7d\x73\x21\xb0\xfd\x0b\xcc\x42\xbc\xb7\x37\x97\xc4\x6b\x09\xcc\xf9\x78\x75\x4b\xbc\x54\x2e\xd8\x5d\xfd\x10\xd6\xfa\xef\xb6\xde\xb3\xdd\xd1\xca\x08\xd5\x06\x33\x83\xce\xf5\x95\xbe\x33\xa3\x43\xaa\xd0\xda\xb8\x2d\xd4\xcd\xba\xf1\xd2\xaa\x2b\x39\x0c\xfa\x9a\x55\xcd\xd5\x16\x53\xad\xeb\xa6\xd8\x50\x53\xef\xf2\x6b\x1e\xa7\xe5\x16\x9b\xdf\xf8\x4e\x56\x83\xe7\x65\xd4\xf6\x78\x6b\x9f\xd8\xee\xf6\x66\x49\x3b\xb9\xe9\xda\xc7\x76\x68\xa8\x6d\x9a\x46\x47\x17\x0c\x68\xec\xc8\x82\x81\xab\xbd\xad\x4e\xb3\x62\xb8\xb0\xbb\xe3\x54\x03\x3b\x35\x7b\x06\xf4\x63\xc6\x7c\x38\x12\x8e\x4e\x5e\x04\x46\x38\xe8\xe9\x28\x28\x30\x8f\xf3\xad\x37\x36\xda\x15\x27\x83\x5d\x8d\x4c\xe9\xb8\x1f\xf0\x6e\xae\xad\xe6\xa7\x82\x51\x2b\xcb\xb9\x98\x9c\x46\x3d\xf1\x33\x2a\xf9\xc0\xe0\xe9\x4d\x32\xb2\xee\x1e\x45\xa0\xe7\xda\x96\xdd\x56\x0e\x76\x05\xe1\xb8\x05\x23\x0c\xbb\x26\x0c\xf1\x03\x27\x6a\xc6\xc7\x00\xf7\x04\x62\x2f\xde\xe3\x42\xf1\x60\xec\x9a\x94\x3c\x2e\xf1\x06\x00\x7b\xa5\xe8\x84\xce\xb3\xb6\x69\xb5\x5e\x6b\x73\x4c\xee\x9d\xae\xed\x03\x4c\x13\xca\xfb\x31\xd5\xd7\xa6\x6c\x03\x61\xdf\xd6\x1f\xab\x25\x0d\x81\xf7\xf4\xdf\x45\xb0\xf7\x65\xe0\x13\xe0\x8f\x0a\xc2\x8b\x38\xd1\xd5\x85\x93\x5d\x38\x2e\x0a\x3e\x83\x2c\x98\x21\x0c\x3a\x98\xdb\xae\xd5\x79\xbb\xba\xee\x0a\x86\xee\x6d\x5a\x3f\xfe\x1b\x00\x00\xff\xff\xdf\x53\x1d\x4e\x9a\x1d\x00\x00")

func assetsMappingTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsMappingTmpl,
		"assets/mapping.tmpl",
	)
}

func assetsMappingTmpl() (*asset, error) {
	bytes, err := assetsMappingTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/mapping.tmpl", size: 7578, mode: os.FileMode(436), modTime: time.Unix(1448041598, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsScopeTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x55\x4d\x8f\x9b\x30\x10\x3d\xc3\xaf\x98\xe5\xb0\x82\xdd\x88\xbd\x57\xe2\x90\x6e\x0f\x95\x5a\xad\x5a\xa5\xb7\xaa\x5a\x79\xc1\x20\x57\x60\x52\xdb\xb4\x8d\x22\xfe\x7b\x3d\x63\x48\x42\x70\x3e\x6e\xe9\x25\x8b\xfd\xde\x7c\xbc\xf1\xb3\xd7\x6c\xd6\x1c\xb6\x5b\x48\x5f\x58\xc3\xa1\xef\x57\x79\x6b\x37\xb4\x51\x5d\x6e\x60\x1b\x06\x0f\x42\x1a\xae\x24\xab\x09\x08\xfb\x30\x2c\x3b\x99\xc3\x0b\xff\x73\x1c\x14\xe7\xf0\xf0\xdc\x4a\x99\xc0\xc3\x2c\xdf\x36\x04\xd0\xf0\x2e\x83\xfb\x63\x68\xdb\x23\x94\xae\xb8\xc1\xd8\x38\x4f\xec\x52\x71\xd3\x29\x09\x7a\x57\x2d\xd6\x94\x65\x96\x37\x81\x5d\x9c\xfd\x19\xcb\x8f\x25\x03\x8a\x4a\x09\xca\x00\xff\x8c\x5b\x86\xbd\xd5\x1c\xf7\xd2\xd5\xd7\xcf\xdf\x70\x11\x47\x07\xb9\xa3\x64\xb1\x0b\xee\x94\xe2\xd2\xd6\xa8\xbb\x46\x9e\x8b\x80\x47\x88\xd2\xc8\xfe\x12\xc3\xf1\xa7\x94\x05\xd0\xf2\x8b\x12\x0d\x53\x9b\x4f\x7c\xe3\x48\x93\xa2\xa3\xf2\xc9\xac\xe3\xb9\x6c\x22\xe0\x56\x9c\xe0\x59\x09\x59\xa1\xde\x21\x7a\x52\xf5\x8a\x19\xd2\x34\x66\xc9\x44\x09\x07\xc3\x5a\xd6\x82\x69\xb8\xcb\x20\x8a\x10\x9c\x34\x7a\xc0\x08\x83\x7e\x2a\x82\xa6\x7f\x6a\x66\x57\xf4\xf6\x5c\x73\xa6\x62\xbf\xa5\xf6\x2d\x52\x91\x03\x06\x64\x99\x43\xa8\x57\xf7\x45\xde\x23\xc2\xe8\x3c\x17\x3b\xf1\x77\xfa\x5c\xb7\xd2\xce\xa1\x47\x21\x61\x50\xb5\x6d\x41\xb6\xfd\xfe\xc3\x96\x28\x84\x11\xad\xb4\x86\x0d\xca\x56\xc1\xeb\x02\x2d\x55\x20\xaa\x98\xac\xf8\xbe\x15\xc7\xd3\x54\xdb\xb6\x78\xe7\x66\xaa\xd3\x8f\x4c\xaf\xba\xb2\x14\x7f\xd1\xad\x85\x65\xe2\xf1\x2f\xd0\x36\x8f\x1e\xb3\x25\x14\x3f\xb4\x90\x01\x5b\xaf\xb9\x2c\x62\x5a\xba\xca\x89\x85\xa9\xcf\x60\x56\x39\x03\xe2\x9d\xf2\xd3\xf9\x69\x2f\xeb\xfa\x66\x03\xf7\x28\x39\x1a\xfd\x39\x45\x3e\x41\x94\xdd\xaf\x66\x48\x75\x7f\xed\x74\xde\x33\x7d\x29\x97\xef\x59\xdc\x4f\x8c\x0c\xff\xf4\x04\x4b\x0d\x9a\x1b\x0d\x0c\x9c\x07\x80\xd1\xdd\xb9\x50\x7e\xa9\x63\xe2\x0d\x77\xf4\xc6\x47\xe4\xac\xea\x9e\x85\x6c\x10\x30\x3b\x1c\xd4\xea\x5a\x76\x72\xdd\xbb\x7b\x9d\x5a\x24\xfd\x47\x82\x0f\x5e\xc1\x93\x72\x2f\x48\xfa\x20\xb4\x11\x32\x37\x37\xbe\x5d\x42\x8f\x8d\xd8\x24\xf6\xff\x3c\x9f\x0b\xb1\xb5\x0d\x6f\xd6\x35\x33\x1c\xa2\xfd\x6d\x8c\x20\xb5\xdd\x4c\xd1\x56\x15\x1c\x4f\x27\xf2\x81\x3f\x5b\x21\x11\xf3\x40\xac\xaa\x14\xaf\xec\xa7\x37\x6b\x29\xa4\x4d\xeb\x85\xf2\xb6\x93\xe6\x44\x52\xcd\x7e\xf3\xd7\x6e\x5d\xd8\x85\x17\x46\x7d\xaf\xfa\x57\x7d\x1a\xcc\xdb\xe6\x4d\xc8\x33\xd1\x0d\x3e\xc4\xca\xdf\x18\xde\xe5\x81\x30\xb4\xfe\x2f\x00\x00\xff\xff\x51\x1c\x49\xff\x5e\x09\x00\x00")

func assetsScopeTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsScopeTmpl,
		"assets/scope.tmpl",
	)
}

func assetsScopeTmpl() (*asset, error) {
	bytes, err := assetsScopeTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/scope.tmpl", size: 2398, mode: os.FileMode(436), modTime: time.Unix(1448041670, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsScope_subsTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\xff\x6f\xe3\xb6\x15\xff\xb9\xfe\x2b\x38\xa1\xed\xa4\x8b\xa1\x76\xc0\xb0\x1f\x6e\xc8\x86\x5c\xe2\x5b\xb3\x65\xc9\x35\xce\xad\x18\xd2\x20\x50\x24\x3a\x51\x23\x4b\x8e\x28\x39\x17\xb8\xfe\xdf\xf7\x1e\x1f\x45\x91\xb2\x64\xc9\xf6\xad\xc0\xd5\x12\xf9\xf8\xf8\xbe\x7e\xde\x23\x95\xd5\x8a\x45\x7c\x16\xa7\x9c\x39\x61\x96\x46\x71\x11\x67\xa9\x70\xd8\x7a\x3d\x62\xec\x87\x1f\xd8\x43\x20\xe2\x90\xd5\x33\x30\x3a\x2b\xd3\x90\xb9\x22\xcc\x16\x9c\xbd\x83\xe5\xfe\x65\x30\xe7\xb0\x60\x8a\x23\x1e\x9b\xbc\xb8\xcb\x20\x61\x71\x5a\xf0\x7c\x16\x84\x7c\xb5\xf6\x36\xc9\xd8\x0a\x18\x31\x26\x99\xf8\x92\x34\x0d\x12\x39\xe3\xd3\x7a\x4f\xce\xe7\xbc\x28\xf3\x94\xc8\x60\x60\x3d\xea\xdf\xfe\x92\x1f\xb8\xbf\x62\xb0\xb7\x00\xff\x28\x0e\xdb\x9f\xd6\x1f\xb0\x3d\x3f\x74\x7f\x7e\x90\x00\x17\x07\xea\x7f\x71\x98\xfe\x17\x87\xea\x7f\xb1\x5d\x7f\x4a\x8b\x79\x99\x14\x31\x03\xb2\x92\xef\x94\x1c\x1f\x78\xf1\xca\x79\xea\x26\xd9\x2b\xcf\xc7\xac\x5c\x2c\x78\xbe\xbf\xa8\x6d\xdc\xf6\x36\xdc\x79\x8a\x6a\x0b\xe6\xfb\xfe\xde\x02\x29\x1e\xc0\x62\xff\xfc\xcd\x8a\xaf\x21\x49\xcd\xe6\x10\x61\x2e\xe2\x67\xee\x8a\x22\x67\xf0\x2f\x4e\x1f\x77\x0c\x24\xb5\x78\xef\xdd\x7f\x79\xe2\x39\x70\x78\x49\xd4\xf6\x63\x76\xb0\x59\x34\x4b\xe2\xd5\x6d\x1b\xe0\xc9\xd3\x08\xcb\xc0\xc8\xa8\x10\x59\x1e\x71\x94\xa4\xae\x0f\xd5\xc8\x4e\x59\x70\x85\x8b\x5c\xbd\x74\x98\x71\x25\x39\x3b\x66\x01\x44\x79\x1a\xb9\xc6\xe0\x58\x4b\xb1\xb7\xa9\xcf\xb8\x08\xdd\x43\x24\xa0\x97\xb0\xcc\x73\x9e\x16\xa7\x59\x52\xce\xd3\x23\x87\x9d\x4d\xa6\xa7\xce\xde\x42\x9d\xfc\x5f\x64\x3a\xe9\x16\xc9\x76\x7a\xc1\xe7\x8b\x24\x28\xc0\xed\xbf\x65\x71\x2a\xbd\xee\x6b\xbf\xff\x13\x86\xa4\xfc\xfd\xee\xfe\xe6\xaa\x84\x10\xc4\x05\x6e\xf1\x04\x6c\x64\x04\x2b\x15\x77\x89\xdd\x4c\xb3\x71\x8c\x55\xce\x98\x11\xd7\x03\xf2\xfc\x9b\xf3\x34\xfd\x1a\x12\xc6\x9a\xcd\xee\x12\x2a\x9b\x7e\x78\x63\x41\x02\x78\x2e\xd8\x5b\x56\xb2\x22\x63\x62\xc1\xc3\x78\xf6\x06\x2c\x38\xe3\x5f\x82\xb0\x60\xe8\x0d\x36\xfd\xf9\x02\xf2\x26\x28\xe6\xe0\x5a\x36\xcb\x72\x96\x41\x7e\xc2\xcf\x3c\xcb\x39\x71\x2b\x82\x87\x84\x0b\x9f\xfd\x17\xf8\x84\x41\x0a\x6c\x45\xc6\x16\x81\x10\x92\x15\xa9\x92\x3d\xfc\xc6\xc3\x02\x47\x82\x42\x6e\x18\xe4\x9c\xcd\x83\xb4\x04\x19\xde\x98\x72\xfb\x98\x11\xc3\xd7\xa7\x38\x7c\x92\x14\x39\x0f\x31\xc4\x22\xb9\xf1\xac\x04\x65\xb8\x14\x1e\x93\x19\x44\x7e\xcd\xf2\x67\x96\xcd\x66\xf0\x0f\x45\x82\x91\x07\x0e\xe5\x25\x4c\xca\x88\xff\x31\xf2\xfb\xdd\x41\x86\x70\x71\x7f\xa1\xb1\x0f\xdf\x78\x24\x29\x86\xfb\x87\x58\x34\xd2\x43\x0e\x12\x43\xe1\x35\x88\xf5\x0e\x2d\x6b\xaa\x39\x5b\x96\x43\xea\x0b\xf2\x41\x37\x41\x9a\x93\x9a\x4a\xf8\x78\xa6\x44\x92\x4e\x3c\x49\xe2\x40\xb0\x3f\x1c\x33\xc7\x51\xf3\x7a\xb3\xd9\xbc\xf0\xa7\x0b\x58\x59\xcc\x5c\x35\xc3\x98\xf3\x9d\x80\x2c\x67\xdf\x09\x67\xac\xc7\x14\x16\x64\x69\xea\x43\xe8\xdc\xc8\x4d\xad\x20\xf5\x9a\xb4\xf5\xd6\xd5\x0c\xa9\xb9\xde\x50\x76\x2b\xdb\x2d\xd5\x24\x78\x7c\xcc\xf9\x23\x20\x8c\x30\x91\xa5\x1a\x85\x52\xc2\x66\x71\x52\x48\x60\xef\x37\xe5\x4f\xc1\x12\xe8\x0e\xad\x96\x4f\x92\x4b\xd3\xf9\x34\x0a\x80\xfa\x92\x78\x36\x31\xff\x0f\xee\xb1\x49\x2e\xc7\xfb\x6a\xec\x80\x66\x3e\xcf\xca\xc5\x87\x37\x30\xad\x1b\x66\xa4\xcc\xb0\x62\xf9\x48\x0b\x9b\x92\xa9\xe1\x31\x43\x6e\xbb\x16\xff\x24\x9e\x43\x81\x37\x8b\xff\x35\x17\xd0\x07\x03\xb3\x12\x41\x68\xb8\xaf\x2e\x90\x93\x2b\xf9\x61\xf3\xfb\x97\x3f\xf7\xa9\x43\xa4\xc7\xec\x7b\xf9\xb0\xaf\x35\xaf\x66\x33\xc1\x0b\x37\x93\x3f\xc3\x36\x56\xb4\xb0\x33\x3d\xed\x62\x2f\xf8\x3f\x94\x61\xe3\x2c\x0d\xae\x2b\x01\xbf\x05\xc5\x58\x00\x2b\x92\x2c\x88\x06\x59\xec\x23\xf0\x72\xe3\xc8\x3e\x2a\xb8\x06\xdd\x98\xf1\x3c\xcf\x72\x4f\x49\x6f\xa5\xe7\x89\xf6\xff\x87\x40\x00\xd6\xe0\x11\x3b\x8e\x3c\xcf\xbf\xe6\x10\x4c\x7c\x09\x43\x03\x2d\x58\x2f\xd8\xb6\x39\x1e\xbf\xde\x83\xc9\x0c\x8a\x15\xa1\xc6\x1c\xc7\xe7\x18\x92\xf9\xc7\x2c\x37\xe6\x69\x4b\x0a\xc7\xb9\x7f\x4a\x2d\x0b\x9a\x1d\x78\x8d\x4c\xfc\xc2\x26\x06\x13\x0e\x88\xe8\x79\x44\xd3\x98\x6c\x4b\xe4\x4e\x84\x3f\x97\x3c\x97\x69\xa3\x22\x3c\x7b\xad\xe7\x24\x5a\x49\x82\xeb\xec\xd5\xa5\x95\x3a\x17\x40\x11\xa4\x84\x05\x50\x60\x82\xd4\x9d\xcb\x1f\x28\xeb\x75\xba\x00\x38\x23\x15\xe0\x71\x1a\x27\x1a\x90\x71\xe8\x58\xe2\xf1\x04\x6d\x31\x73\x1d\xd8\xfe\x3d\x80\xf0\xaf\x29\x02\xb1\x94\x10\x68\x68\xd6\xf5\x4c\x2c\x05\x1d\xfd\x30\x08\x9f\x78\x74\x8f\xb2\x31\x53\x50\xd3\x9b\xef\x80\x50\x32\x19\xed\xe8\xae\x93\x24\x41\x8f\xdd\xde\x75\xfb\x6c\x90\x67\x0e\x76\x02\xd9\xa0\xcd\x15\x4d\x3f\x7c\x45\x23\x6b\xfb\x59\xfa\xaf\xc8\x02\x86\x1b\x20\x6f\xa1\x95\x46\x29\xfd\xd3\x24\xc3\x44\x19\x55\xee\x11\x28\x72\x63\x39\x4d\x62\x07\x24\x97\x5c\xf2\x2f\x85\xeb\x69\x49\xb1\x79\xee\x48\x82\x46\x84\x23\xa5\xa5\x9e\x64\xd7\x15\x7c\x5d\x96\xe9\x57\xb2\x52\x93\x64\xdb\x1e\x70\x4a\x69\x5d\x3d\x96\xb2\x9a\xbd\xc3\x85\x55\xe0\x9a\x81\x49\xd3\x20\x8e\xd1\xcc\x8a\xf2\x01\x91\x73\x91\x94\xe1\xf3\x20\x88\xfb\x14\x87\xcf\x46\xf9\xee\xed\xbc\xc5\x59\x2c\xa0\x1c\x85\x68\xc4\x19\x08\xc0\xcd\x10\x35\xcf\x3c\xa8\xde\x4b\x32\xda\xb7\x6a\x7c\x42\x0d\xa6\x12\xba\xdd\x9c\x0a\x9e\x85\xc2\x32\x8d\xda\x60\xd7\x3e\x1b\x2c\x0c\x36\x8d\xd3\x01\x71\xdd\xd6\x29\xc9\x0a\x6b\x95\xde\x28\x86\x26\xbc\x90\x8a\xf5\x6a\x70\x8a\xab\x21\x36\x65\xc5\x6b\x93\x14\x97\x7c\xca\xe3\x79\x90\xbf\xfd\x8b\xbf\x91\xd5\x74\xfe\x7b\x7e\x65\x68\x78\x94\xac\xae\x66\x83\x0b\x86\xa4\x87\x56\xde\xf4\xab\x29\x46\x13\x51\x6e\xef\x88\x6a\x05\x0b\xd6\x1a\x54\x44\x37\xa8\x2c\x83\x5c\x5d\xc3\x49\xb6\x43\xd0\x5e\x74\xa3\xfd\xf7\x92\xd5\x36\x04\x5a\x04\x69\x1c\xba\x30\xd1\x91\x07\xe5\xd0\xb0\xd2\x96\xb4\xec\xa1\x1b\x7f\x23\xbc\x1b\x2d\x3f\xcd\x57\x86\x35\x0f\x00\xce\xe9\xd5\xe7\xcb\x1b\xf7\xec\x7c\x7a\x73\x7e\x79\x7a\x03\xb0\xe8\x39\xad\xb7\x00\x5e\x67\x27\xbf\x85\xed\x76\x6e\x5d\x91\x0b\xcd\x0e\xbf\x2f\x17\x11\x74\xf9\x2a\x78\x7b\xec\x32\x0d\xa8\x5e\x49\x00\xb2\xc0\xcc\x4e\x35\x04\xde\x58\x3a\x2f\x48\x1f\x39\xe1\x95\x59\x26\x60\x06\xc7\x6e\xe3\x3b\x1f\x59\xba\x75\x34\x0c\x04\xd2\x26\x6e\x5a\xd6\xd2\x58\x47\xd9\x48\xf0\x14\x14\x10\xbb\x0f\x65\xc1\x99\x54\x78\x10\xea\x4d\xf9\x0e\xd7\xe5\x3a\x3a\xc8\xa0\x90\x30\xb6\xec\x8d\x49\xa8\xe7\xcf\xdc\x85\xa2\x7e\x4b\x49\x75\x67\x6e\x62\xe8\x04\xe9\x27\x37\xc3\x9c\x91\x84\xc2\xbf\x01\x34\xf8\x94\x83\x0f\xbf\xb8\x2d\x1e\x1f\x77\x9e\xfb\xbe\xad\x0f\x7e\x47\x8e\xef\x98\x6d\x83\x12\xeb\x56\xed\x76\xc7\xa4\x83\xf6\x45\xe5\xcf\x92\x9b\x6b\xc7\x84\xbe\xd7\xac\xd3\x9f\xe8\x6a\xbc\xb8\x6f\xeb\x40\x26\x5f\x78\xd8\x7d\x29\x4a\x81\x30\x5c\x28\x3a\xaf\xf5\x1e\x44\x2d\xc1\xbb\x60\xd0\x71\xda\x51\xf0\x45\xf6\x4c\xca\xbc\xb8\xa2\xcd\x71\xb0\xc6\x99\x4e\x2e\x26\x00\x05\x1f\xaf\xaf\xfe\xcd\x9c\x23\xe3\x64\x6f\xac\xb5\x92\xfd\xf3\xa7\xb3\x93\x9b\x09\x60\x07\x9b\x4e\x10\x42\x18\x35\x56\xf5\xc2\x31\x99\x59\x88\x5e\x83\xc2\xfe\x56\xff\x40\xc0\xbb\xa7\x6d\xcf\x78\xc2\xdb\x1d\x1e\x1a\x76\x21\xaa\xda\xdd\x98\x31\xe0\x88\x63\xeb\xee\x84\x12\x7f\xcc\xb2\x67\x5c\x18\x2e\x6f\x7f\xbc\xf3\x5d\xea\x86\xff\x8a\x83\xdb\xa0\x80\x71\xe8\x34\x36\x29\xcc\x96\xf4\x73\x4a\x77\x76\x31\x8f\x98\x1c\x83\xe4\x66\x86\x60\x8e\xd7\x82\x2b\x3d\x71\x19\xf6\x75\xc6\x2d\x72\x4c\x52\xd9\x36\xf0\x1c\xe4\x90\xda\x41\xa3\xbc\xfc\x35\x55\x1d\x33\x3c\x3b\x63\xb2\x83\xda\xa1\xa5\x28\x54\x30\xd7\x81\xed\x28\xe9\x3d\xac\x6e\x41\xf6\x4d\x07\xe2\x07\x02\xa9\x3f\x73\xab\xbc\xb8\xb5\x10\x49\xe9\x82\x74\xaa\xdf\x56\x49\xb0\x6e\xb4\xe1\xc6\x22\x35\x87\xc5\xe0\x7e\x5c\x7f\x83\xa8\xeb\x82\xb6\xa6\xfa\x38\xa1\x0d\x46\xdb\xe8\x0e\x57\xbe\x1a\x1c\xfc\x9b\x4c\x0a\xeb\x6d\xe9\x87\x6b\x62\x0b\x36\xec\xb2\xaa\xf2\x52\xde\x0a\xab\x4d\x1c\x76\x72\x79\xc6\x1c\x8f\x80\xc1\xec\x99\x31\x6e\x82\x66\x47\xb7\x69\xca\xba\x07\xea\xb1\xa5\x55\xdb\x6b\xcc\xd8\xc8\xb7\x2e\x28\x1b\xb2\x07\xe6\xd7\xfb\xe3\xb6\x9b\xc8\x06\x96\xe8\xdb\xc8\x01\xc5\x83\x48\xd5\x01\xac\x2a\x68\xbb\xc7\x04\x20\xea\xb8\xba\x8e\x30\xe3\xa1\xe2\x58\x05\x43\x5d\x32\x95\x83\xd5\x80\xbc\x28\x63\x47\xe0\xb1\x63\xf6\x77\x67\x5b\x2c\xe8\x2f\xc6\x6b\x6d\x94\xa3\x63\xdb\xfb\x9a\x27\xe4\x9d\xa3\x54\x83\x64\x4e\x78\xea\x36\xa3\xd4\x63\x7f\x63\x3f\xd6\xa1\x2a\x6c\x90\xd3\x74\x35\xce\xe9\x1d\x1d\xf6\xcb\x4f\x93\xeb\x09\xfc\x1e\x31\xf9\x6d\xa6\x33\x78\x97\x1d\x01\x5b\x95\xc1\x61\x71\x62\xe0\x5a\x4f\x9c\x44\x9c\x4e\x42\xb5\x1e\x70\xca\x4e\x79\x0d\xd4\xb5\x21\xe8\x66\x5e\xda\xe0\xf7\xdf\x8d\x71\xba\x87\xb5\x8d\x13\x47\xcd\x4b\x85\xe1\xa7\x19\x79\xb4\x3b\xc7\xb3\xd1\xb0\x96\xd0\x71\x1a\xba\xad\x80\x7a\xdd\x38\x5d\x6b\x3d\x8f\xf5\x23\x68\xca\x83\x5c\xde\xc2\xf4\x49\x77\x9e\xba\xa0\x91\xd5\x9d\xb5\x78\x9f\x1c\x5f\x19\x2e\x14\x8d\x02\xd7\x92\x92\xce\x19\x34\x02\x90\x8b\xb2\x11\xc0\x92\xbe\xd1\x0a\xd8\x11\xd0\x96\x51\x8d\xe2\xd7\xbf\x8b\x8a\xc5\xc6\x76\xa0\x8e\x68\xdb\x32\x5c\x6a\xad\xb7\x57\x9c\x30\x9b\x3f\xc0\xeb\xb0\xf3\x84\xbe\xfc\x1c\xf2\xd1\x48\xd5\x91\x58\x34\x00\x43\x34\x5a\x6c\xa3\x9e\x34\x6e\xd8\xeb\x19\x64\x23\x5f\x05\xb8\xb5\x3d\xd5\x76\xb9\xbb\xce\x87\x6b\x11\xca\xb6\xa6\x12\x44\x39\x2f\xcb\xdb\x00\x54\x29\x9c\x89\x2a\x33\x5b\x95\x46\x5e\x2d\x8b\x8d\x5a\x9d\xd5\xda\x0b\x33\x9b\x30\x77\xe5\xa0\x87\x21\xfa\x27\x23\xa5\x42\xdf\x46\x25\x7a\xa7\xa2\x2a\xb0\x23\xb3\x6a\x6a\xa5\x81\x26\x87\x17\x83\xb6\x51\xac\x37\xba\xb4\x4a\xcd\x4a\x11\xd2\x92\xa4\xaf\xa9\xba\x85\x92\x0b\x37\x25\x52\x96\xb1\x9a\x88\x8a\xb8\x21\x52\x8d\x0f\x6d\x8a\x38\x2e\xf4\xe6\xcd\x4e\xa1\x6e\x14\x8e\x9c\xf6\xa6\x31\xf4\xd5\xfe\xb0\x1e\xf0\xde\xe2\x40\x7c\xd9\xd5\x35\xac\xc7\x0a\xe6\x39\xa3\xd1\xae\x01\x1c\x7a\x1d\xb7\x66\xdb\xb2\x93\x2e\x91\x55\x72\x16\x6f\x0b\xae\xae\x95\x8d\x60\xad\xbe\x84\x90\xe9\xab\xbb\x50\xf6\xce\x0c\x68\x9a\x52\x27\x22\x1d\x79\x72\xb4\xba\x14\xb5\x41\xca\x4a\xa4\xee\x9b\x6c\xd6\x96\x5d\xef\x36\x45\x34\xae\xc5\xbf\xdf\x98\xad\x3e\x67\x54\xf7\xdf\xe6\x91\x0d\x8b\x24\xc5\xd7\xb7\x74\xa0\x43\x16\x9a\x10\x39\xaf\x30\x33\xd4\xa4\x3f\x8d\xe7\x8b\x84\xdf\xa0\x9d\xd0\x30\x35\x4c\xe2\x56\xae\x74\x9d\x2f\x9d\x6b\x35\x4d\xc4\xae\xd1\x35\x81\xbf\xf1\x3d\xb4\x6a\x0a\xb6\x99\xda\x5d\xc6\x53\xa5\x81\x36\x66\xb3\x8b\x52\xf1\xd6\xa3\x8d\x0e\xea\x2d\x5a\x19\xf9\xa2\x2d\xa9\xa5\xbe\xc9\x36\x65\x5e\xcd\xd7\x63\x93\xb1\x8a\xb5\xb6\x77\x75\x01\x37\x4c\xca\x86\x8c\xe5\x03\xfd\x21\x83\x29\x22\xcc\x47\xf9\x54\x7a\xf2\x24\xcf\x83\x37\xb7\xba\xcb\x95\x7f\xbd\x20\xb0\x40\xd3\x93\x6b\xda\x5a\xb3\xaa\xad\x6e\xe1\x8a\x19\x28\x2a\xdb\xf4\xd0\xd8\xa0\x33\x15\x11\xe5\x43\xad\x8b\xb1\x51\xa8\xb5\x1a\xd0\x47\xef\x11\x3e\x7a\x5f\x23\x82\x9a\x3e\xc0\xff\x14\x36\x54\x0a\x1a\x71\xa4\x35\xac\xc6\xf6\x57\xb1\x2b\x5e\x36\x84\xc4\x90\x69\x97\xb2\x7a\x6a\x8f\x1f\xfb\x4d\x01\xdd\xbc\x09\x72\xa3\xff\x05\x00\x00\xff\xff\xe0\xf3\x27\x24\x26\x2d\x00\x00")

func assetsScope_subsTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsScope_subsTmpl,
		"assets/scope_subs.tmpl",
	)
}

func assetsScope_subsTmpl() (*asset, error) {
	bytes, err := assetsScope_subsTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/scope_subs.tmpl", size: 11558, mode: os.FileMode(436), modTime: time.Unix(1448006773, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsScopesTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x8d\x31\xae\x02\x41\x08\x86\xeb\xc7\x29\x08\x79\x85\x36\x6b\x6f\xe2\x15\xac\xbc\x00\xee\xe2\x66\xe2\x30\x3b\x0e\x74\x9b\xbd\xbb\x50\x58\xf1\x91\x1f\xbe\xbf\xf3\xfc\xe6\x55\x70\xdf\x71\xba\xb3\x0a\x1e\x07\x40\xd1\xbe\x0d\xc7\x13\xfc\xd1\xc2\xce\x4f\x36\xb9\xd8\xa7\x52\xec\x2f\xf5\x1c\xe6\xa3\xb4\xd5\x12\xbd\xa8\x10\x9c\x01\x42\x31\xb8\x85\x0b\xff\xe3\xa7\x0a\x5e\x6f\x38\x3d\x92\x2c\xad\x98\x1d\x2e\xda\x2b\xbb\x20\xd9\xbc\x75\xa1\xdf\x69\xe4\x91\x4a\x5b\x92\xbe\x01\x00\x00\xff\xff\xfa\xbb\x9f\x00\x94\x00\x00\x00")

func assetsScopesTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsScopesTmpl,
		"assets/scopes.tmpl",
	)
}

func assetsScopesTmpl() (*asset, error) {
	bytes, err := assetsScopesTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/scopes.tmpl", size: 148, mode: os.FileMode(436), modTime: time.Unix(1448006854, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _assetsStarterTmpl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\xbd\x6e\xc3\x30\x0c\x84\xe7\xe6\x29\x6e\xeb\x52\x38\x7b\xb7\xfe\x64\xe8\x52\x74\x68\x1f\x80\xb1\x19\x47\xa8\xf5\x03\x89\x41\x6c\x08\x7e\xf7\x52\x42\x8c\xda\x40\xb8\xf1\xee\xc3\x1d\x19\xa8\xfd\xa5\x9e\x91\x33\x9a\x4f\xb2\x8c\x79\xde\xed\xf6\x7b\xbc\x74\x1d\x26\x7f\x89\x10\x3a\x0e\x9c\x60\x1c\xce\x1c\xf9\x09\x3e\x82\x9c\x17\x5d\x1e\x0b\x77\x32\x03\xe3\x6a\xe4\x0c\x95\xd0\xf4\x01\x3c\x0a\xbb\x64\xbc\x6b\xd4\x2f\xc8\x61\x24\x1b\x94\xfa\xae\x49\xcf\x45\x92\x29\x30\x7e\x12\xdf\xe2\x91\x6b\xe7\x32\x1f\xef\x5a\x27\x45\x79\xd0\x41\x3d\x2b\x49\x34\xae\x5f\x53\x07\x4b\x66\xb8\xa3\xbf\xbe\xc5\x29\xc8\x17\xa5\x74\xf5\xb1\x2b\xce\x7c\x3b\xa4\xb6\x6e\x6d\x58\x33\xea\x6b\x79\x1d\xb0\x05\xfe\x0b\x4a\x0c\x8e\x6d\x71\x11\x16\xfb\x74\x71\xad\xe8\xb3\xe9\x2f\x00\x00\xff\xff\x04\x39\xac\xd1\x49\x01\x00\x00")

func assetsStarterTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsStarterTmpl,
		"assets/starter.tmpl",
	)
}

func assetsStarterTmpl() (*asset, error) {
	bytes, err := assetsStarterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/starter.tmpl", size: 329, mode: os.FileMode(436), modTime: time.Unix(1448036076, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if (err != nil) {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/conn.tmpl": assetsConnTmpl,
	"assets/lib.tmpl": assetsLibTmpl,
	"assets/mapping.tmpl": assetsMappingTmpl,
	"assets/scope.tmpl": assetsScopeTmpl,
	"assets/scope_subs.tmpl": assetsScope_subsTmpl,
	"assets/scopes.tmpl": assetsScopesTmpl,
	"assets/starter.tmpl": assetsStarterTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"conn.tmpl": &bintree{assetsConnTmpl, map[string]*bintree{
		}},
		"lib.tmpl": &bintree{assetsLibTmpl, map[string]*bintree{
		}},
		"mapping.tmpl": &bintree{assetsMappingTmpl, map[string]*bintree{
		}},
		"scope.tmpl": &bintree{assetsScopeTmpl, map[string]*bintree{
		}},
		"scope_subs.tmpl": &bintree{assetsScope_subsTmpl, map[string]*bintree{
		}},
		"scopes.tmpl": &bintree{assetsScopesTmpl, map[string]*bintree{
		}},
		"starter.tmpl": &bintree{assetsStarterTmpl, map[string]*bintree{
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        // File
        if err != nil {
                return RestoreAsset(dir, name)
        }
        // Dir
        for _, child := range children {
                err = RestoreAssets(dir, filepath.Join(name, child))
                if err != nil {
                        return err
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

